{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResultSet = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'ResultSet';\nvar dependencies = [];\nvar createResultSet = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function () {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n    this.entries = entries || [];\n  }\n\n  /**\n   * Attach type information\n   */\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n  return ResultSet;\n}, {\n  isClass: true\n});\nexports.createResultSet = createResultSet;","map":{"version":3,"names":["Object","defineProperty","exports","value","createResultSet","_factory","require","name","dependencies","factory","ResultSet","entries","SyntaxError","prototype","type","isResultSet","valueOf","toString","join","toJSON","mathjs","fromJSON","json","isClass"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/type/resultset/ResultSet.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResultSet = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'ResultSet';\nvar dependencies = [];\nvar createResultSet = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function () {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n    this.entries = entries || [];\n  }\n\n  /**\n   * Attach type information\n   */\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n  return ResultSet;\n}, {\n  isClass: true\n});\nexports.createResultSet = createResultSet;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIC,IAAI,GAAG,WAAW;AACtB,IAAIC,YAAY,GAAG,EAAE;AACrB,IAAIJ,eAAe,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,YAAY;EACzF;AACF;AACA;AACA;AACA;AACA;EACE,SAASE,SAAS,CAACC,OAAO,EAAE;IAC1B,IAAI,EAAE,IAAI,YAAYD,SAAS,CAAC,EAAE;MAChC,MAAM,IAAIE,WAAW,CAAC,kDAAkD,CAAC;IAC3E;IACA,IAAI,CAACD,OAAO,GAAGA,OAAO,IAAI,EAAE;EAC9B;;EAEA;AACF;AACA;EACED,SAAS,CAACG,SAAS,CAACC,IAAI,GAAG,WAAW;EACtCJ,SAAS,CAACG,SAAS,CAACE,WAAW,GAAG,IAAI;;EAEtC;AACF;AACA;AACA;AACA;EACEL,SAAS,CAACG,SAAS,CAACG,OAAO,GAAG,YAAY;IACxC,OAAO,IAAI,CAACL,OAAO;EACrB,CAAC;;EAED;AACF;AACA;AACA;AACA;EACED,SAAS,CAACG,SAAS,CAACI,QAAQ,GAAG,YAAY;IACzC,OAAO,GAAG,GAAG,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;EAC5C,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACER,SAAS,CAACG,SAAS,CAACM,MAAM,GAAG,YAAY;IACvC,OAAO;MACLC,MAAM,EAAE,WAAW;MACnBT,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC;EACH,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACED,SAAS,CAACW,QAAQ,GAAG,UAAUC,IAAI,EAAE;IACnC,OAAO,IAAIZ,SAAS,CAACY,IAAI,CAACX,OAAO,CAAC;EACpC,CAAC;EACD,OAAOD,SAAS;AAClB,CAAC,EAAE;EACDa,OAAO,EAAE;AACX,CAAC,CAAC;AACFrB,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script"}