{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Web-main\\\\src\\\\LinearAlgebraicEquation\\\\Cramer.js\";\nimport { Button } from \"react-bootstrap\";\nimport { React, Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Cramer extends Component {\n  constructor() {\n    super();\n    this.creatematrix = () => {\n      var size = document.getElementById(\"inputmatrix\").value;\n      var matstring = '';\n      for (var i = 0; i < size; i++) {\n        for (var j = 0; j < size; j++) {\n          matstring += \"<input id='mat\" + i + j + \"' type='number' step='1' placeholder='A\" + i + j + \"' class='input-matrix'/>\";\n        }\n        matstring += ' | <input type=\"number\" id=\"matans' + i + '0\" placeholder=\"B' + i + '\" class=\"input-matrix\"/>';\n        matstring += \"<br>\";\n      }\n      document.getElementById(\"matrixinput\").innerHTML = matstring;\n    };\n    console.log(\"constructor called\");\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount called\");\n  }\n  getValue() {\n    function cloneArray(A) {\n      var B = [];\n      for (let i = 0; i < A.length; i++) {\n        B[i] = A[i].slice();\n      }\n      return B;\n    }\n    var A = [];\n    var B = [];\n    var ansstring = '';\n    var count = 1;\n    const math = require(\"mathjs\");\n    var size = document.getElementById(\"inputmatrix\").value;\n    for (var i = 0; i < size; i++) {\n      A.push([]);\n      B.push([]);\n      for (var j = 0; j < size; j++) {\n        A[i].push(document.getElementById('mat' + i + j).value);\n      }\n      B[i].push(document.getElementById('matans' + i + \"0\").value);\n    }\n    var detA = math.det(A);\n    console.log(A, B);\n    for (var i = 0; i < size; i++) {\n      var tmp = cloneArray(A);\n      for (var j = 0; j < size; j++) {\n        tmp[j][i] = B[j][0];\n      }\n      var dettmp = math.det(tmp);\n      var ans = dettmp / detA;\n      ansstring += \"<h4>x\" + count + \" = \" + ans + \"</h4>\";\n      count++;\n    }\n    document.getElementById(\"ansstring\").innerHTML = ansstring;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 36\n        }, this), \"Cramer's Rule\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"0px 0px 25px 0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Enter Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"inputmatrix\",\n              type: \"number\",\n              step: \"1\",\n              placeholder: \"size of matrix\",\n              class: \"input-sizematrix\",\n              onChange: this.creatematrix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"matrixinput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.getValue,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ansstring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Cramer;","map":{"version":3,"names":["Button","React","Component","Form","Cramer","constructor","creatematrix","size","document","getElementById","value","matstring","i","j","innerHTML","console","log","componentDidMount","getValue","cloneArray","A","B","length","slice","ansstring","count","math","require","push","detA","det","tmp","dettmp","ans","render","margin"],"sources":["C:/Users/Admin/Desktop/React-Web-main/src/LinearAlgebraicEquation/Cramer.js"],"sourcesContent":["import { Button } from \"react-bootstrap\";\nimport {React,Component} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport '../App.css';\n\nclass Cramer extends Component {\n    constructor(){\n        super();\n        console.log(\"constructor called\");\n    }\n    componentDidMount(){\n        console.log(\"componentDidMount called\");\n    }\n    getValue() {\n\n        function cloneArray(A) {\n            var B = []\n            for (let i = 0; i < A.length; i++) {\n                B[i] = A[i].slice()\n            }\n            return B\n        }\n\n        var A = [];\n        var B = [];\n        var ansstring='';\n        var count=1;\n        const math = require(\"mathjs\"); \n        var size = document.getElementById(\"inputmatrix\").value;\n        for(var i=0;i<size;i++){\n            A.push([]);\n            B.push([]);\n            for(var j=0;j<size;j++){\n                A[i].push(document.getElementById('mat'+i+j).value);\n            }\n            B[i].push(document.getElementById('matans'+i+\"0\").value);\n        }\n        var detA = math.det(A);\n        console.log(A,B);\n        for(var i=0;i<size;i++){\n            var tmp =cloneArray(A);\n            for(var j=0;j<size;j++){\n                tmp[j][i] = B[j][0];\n            }\n            var dettmp = math.det(tmp);\n            var ans =  dettmp/detA;\n            ansstring+=\"<h4>x\"+count+\" = \"+ans+\"</h4>\";\n            count++;    \n        }\n        document.getElementById(\"ansstring\").innerHTML=ansstring;\n\n    }\n    creatematrix=()=>{\n        var size = document.getElementById(\"inputmatrix\").value;\n        var matstring='';\n        for(var i=0;i<size;i++){\n            for(var j=0;j<size;j++){\n                matstring+=\"<input id='mat\"+i+j+\"' type='number' step='1' placeholder='A\"+i+j+\"' class='input-matrix'/>\";\n            }\n            matstring+=' | <input type=\"number\" id=\"matans'+i+'0\" placeholder=\"B'+i+'\" class=\"input-matrix\"/>';\n            matstring+=\"<br>\";\n        }\n        document.getElementById(\"matrixinput\").innerHTML=matstring;\n    }\n    render() {\n        return (\n            <div>\n                <h1 class=\"header\"><p/>Cramer's Rule</h1>\n                <Form>\n                    <Form.Group className=\"mb-3\">\n                        <div style={{margin:\"0px 0px 25px 0px\"}}>\n                            <h4>Enter Number</h4><p/>\n                            <input id=\"inputmatrix\" type=\"number\" step=\"1\" placeholder=\"size of matrix\" class=\"input-sizematrix\" onChange={this.creatematrix}/>\n                            <div id=\"matrixinput\"></div>\n                        </div>\n                        <Button onClick={this.getValue}>\n                            Submit\n                        </Button>\n                    </Form.Group>\n                </Form>\n                <div id=\"ansstring\"/>\n            </div>\n        );\n    }\n}\nexport default Cramer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}