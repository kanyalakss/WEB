{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSmallerEqNumber = exports.createSmallerEq = void 0;\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _matAlgo03xDSf = require(\"../../type/matrix/utils/matAlgo03xDSf.js\");\nvar _matAlgo07xSSf = require(\"../../type/matrix/utils/matAlgo07xSSf.js\");\nvar _matAlgo12xSfs = require(\"../../type/matrix/utils/matAlgo12xSfs.js\");\nvar _matrixAlgorithmSuite = require(\"../../type/matrix/utils/matrixAlgorithmSuite.js\");\nvar _compareUnits = require(\"./compareUnits.js\");\nvar name = 'smallerEq';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nvar createSmallerEq = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    matrix = _ref.matrix,\n    DenseMatrix = _ref.DenseMatrix;\n  var matAlgo03xDSf = (0, _matAlgo03xDSf.createMatAlgo03xDSf)({\n    typed: typed\n  });\n  var matAlgo07xSSf = (0, _matAlgo07xSSf.createMatAlgo07xSSf)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matAlgo12xSfs = (0, _matAlgo12xSfs.createMatAlgo12xSfs)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matrixAlgorithmSuite = (0, _matrixAlgorithmSuite.createMatrixAlgorithmSuite)({\n    typed: typed,\n    matrix: matrix\n  });\n  var compareUnits = (0, _compareUnits.createCompareUnits)({\n    typed: typed\n  });\n\n  /**\n   * Test whether value x is smaller or equal to y.\n   *\n   * The function returns true when x is smaller than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smallerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(1 + 2, 3)        // returns false\n   *    math.smallerEq(1 + 2, 3)      // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  return typed(name, createSmallerEqNumber({\n    typed: typed,\n    config: config\n  }), {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x <= y;\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.lte(y) || (0, _nearlyEqual.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) !== 1;\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n  }, compareUnits, matrixAlgorithmSuite({\n    SS: matAlgo07xSSf,\n    DS: matAlgo03xDSf,\n    Ss: matAlgo12xSfs\n  }));\n});\nexports.createSmallerEq = createSmallerEq;\nvar createSmallerEqNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed', 'config'], function (_ref2) {\n  var typed = _ref2.typed,\n    config = _ref2.config;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x <= y || (0, _number.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\nexports.createSmallerEqNumber = createSmallerEqNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","createSmallerEqNumber","createSmallerEq","_nearlyEqual","require","_number","_factory","_matAlgo03xDSf","_matAlgo07xSSf","_matAlgo12xSfs","_matrixAlgorithmSuite","_compareUnits","name","dependencies","factory","_ref","typed","config","matrix","DenseMatrix","matAlgo03xDSf","createMatAlgo03xDSf","matAlgo07xSSf","createMatAlgo07xSSf","matAlgo12xSfs","createMatAlgo12xSfs","matrixAlgorithmSuite","createMatrixAlgorithmSuite","compareUnits","createCompareUnits","booleanBoolean","x","y","BigNumberBigNumber","lte","nearlyEqual","epsilon","FractionFraction","compare","ComplexComplex","TypeError","SS","DS","Ss","_ref2","numberNumber"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/relational/smallerEq.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSmallerEqNumber = exports.createSmallerEq = void 0;\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _matAlgo03xDSf = require(\"../../type/matrix/utils/matAlgo03xDSf.js\");\nvar _matAlgo07xSSf = require(\"../../type/matrix/utils/matAlgo07xSSf.js\");\nvar _matAlgo12xSfs = require(\"../../type/matrix/utils/matAlgo12xSfs.js\");\nvar _matrixAlgorithmSuite = require(\"../../type/matrix/utils/matrixAlgorithmSuite.js\");\nvar _compareUnits = require(\"./compareUnits.js\");\nvar name = 'smallerEq';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nvar createSmallerEq = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    matrix = _ref.matrix,\n    DenseMatrix = _ref.DenseMatrix;\n  var matAlgo03xDSf = (0, _matAlgo03xDSf.createMatAlgo03xDSf)({\n    typed: typed\n  });\n  var matAlgo07xSSf = (0, _matAlgo07xSSf.createMatAlgo07xSSf)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matAlgo12xSfs = (0, _matAlgo12xSfs.createMatAlgo12xSfs)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matrixAlgorithmSuite = (0, _matrixAlgorithmSuite.createMatrixAlgorithmSuite)({\n    typed: typed,\n    matrix: matrix\n  });\n  var compareUnits = (0, _compareUnits.createCompareUnits)({\n    typed: typed\n  });\n\n  /**\n   * Test whether value x is smaller or equal to y.\n   *\n   * The function returns true when x is smaller than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smallerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(1 + 2, 3)        // returns false\n   *    math.smallerEq(1 + 2, 3)      // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  return typed(name, createSmallerEqNumber({\n    typed: typed,\n    config: config\n  }), {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x <= y;\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.lte(y) || (0, _nearlyEqual.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) !== 1;\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n  }, compareUnits, matrixAlgorithmSuite({\n    SS: matAlgo07xSSf,\n    DS: matAlgo03xDSf,\n    Ss: matAlgo12xSfs\n  }));\n});\nexports.createSmallerEq = createSmallerEq;\nvar createSmallerEqNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed', 'config'], function (_ref2) {\n  var typed = _ref2.typed,\n    config = _ref2.config;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x <= y || (0, _number.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\nexports.createSmallerEqNumber = createSmallerEqNumber;"],"mappings":"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"},"metadata":{},"sourceType":"script"}