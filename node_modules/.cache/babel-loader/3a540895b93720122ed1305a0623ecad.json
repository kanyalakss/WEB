{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIfft = void 0;\nvar _array = require(\"../../utils/array.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _is = require(\"../../utils/is.js\");\nvar name = 'ifft';\nvar dependencies = ['typed', 'fft', 'dotDivide', 'conj'];\nvar createIfft = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    fft = _ref.fft,\n    dotDivide = _ref.dotDivide,\n    conj = _ref.conj;\n  /**\n   * Calculate N-dimensional inverse fourier transform\n   *\n   * Syntax:\n   *\n   *     math.ifft(arr)\n   *\n   * Examples:\n   *\n   *    math.ifft([[2, 2], [0, 0]]) // returns [[{re:1, im:0}, {re:0, im:0}], [{re:1, im:0}, {re:0, im:0}]]\n   *\n   * See Also:\n   *\n   *      fft\n   *\n   * @param {Array | Matrix} arr    An array or matrix\n   * @return {Array | Matrix}       N-dimensional fourier transformation of the array\n   */\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(arr) {\n      var size = (0, _is.isMatrix)(arr) ? arr.size() : (0, _array.arraySize)(arr);\n      return dotDivide(conj(fft(conj(arr))), size.reduce(function (acc, curr) {\n        return acc * curr;\n      }, 1));\n    }\n  });\n});\nexports.createIfft = createIfft;","map":{"version":3,"names":["Object","defineProperty","exports","value","createIfft","_array","require","_factory","_is","name","dependencies","factory","_ref","typed","fft","dotDivide","conj","ArrayMatrix","arr","size","isMatrix","arraySize","reduce","acc","curr"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/matrix/ifft.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIfft = void 0;\nvar _array = require(\"../../utils/array.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _is = require(\"../../utils/is.js\");\nvar name = 'ifft';\nvar dependencies = ['typed', 'fft', 'dotDivide', 'conj'];\nvar createIfft = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    fft = _ref.fft,\n    dotDivide = _ref.dotDivide,\n    conj = _ref.conj;\n  /**\n   * Calculate N-dimensional inverse fourier transform\n   *\n   * Syntax:\n   *\n   *     math.ifft(arr)\n   *\n   * Examples:\n   *\n   *    math.ifft([[2, 2], [0, 0]]) // returns [[{re:1, im:0}, {re:0, im:0}], [{re:1, im:0}, {re:0, im:0}]]\n   *\n   * See Also:\n   *\n   *      fft\n   *\n   * @param {Array | Matrix} arr    An array or matrix\n   * @return {Array | Matrix}       N-dimensional fourier transformation of the array\n   */\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(arr) {\n      var size = (0, _is.isMatrix)(arr) ? arr.size() : (0, _array.arraySize)(arr);\n      return dotDivide(conj(fft(conj(arr))), size.reduce(function (acc, curr) {\n        return acc * curr;\n      }, 1));\n    }\n  });\n});\nexports.createIfft = createIfft;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAIC,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC5C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIE,GAAG,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACtC,IAAIG,IAAI,GAAG,MAAM;AACjB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,CAAC;AACxD,IAAIN,UAAU,GAAG,eAAe,CAAC,CAAC,EAAEG,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACxF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACpBC,GAAG,GAAGF,IAAI,CAACE,GAAG;IACdC,SAAS,GAAGH,IAAI,CAACG,SAAS;IAC1BC,IAAI,GAAGJ,IAAI,CAACI,IAAI;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOH,KAAK,CAACJ,IAAI,EAAE;IACjB,gBAAgB,EAAE,SAASQ,WAAW,CAACC,GAAG,EAAE;MAC1C,IAAIC,IAAI,GAAG,CAAC,CAAC,EAAEX,GAAG,CAACY,QAAQ,EAAEF,GAAG,CAAC,GAAGA,GAAG,CAACC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAEd,MAAM,CAACgB,SAAS,EAAEH,GAAG,CAAC;MAC3E,OAAOH,SAAS,CAACC,IAAI,CAACF,GAAG,CAACE,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC,EAAEC,IAAI,CAACG,MAAM,CAAC,UAAUC,GAAG,EAAEC,IAAI,EAAE;QACtE,OAAOD,GAAG,GAAGC,IAAI;MACnB,CAAC,EAAE,CAAC,CAAC,CAAC;IACR;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFtB,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script"}