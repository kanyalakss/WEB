{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEqualScalarNumber = exports.createEqualScalar = void 0;\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _complex = require(\"../../utils/complex.js\");\nvar _compareUnits = require(\"./compareUnits.js\");\nvar name = 'equalScalar';\nvar dependencies = ['typed', 'config'];\nvar createEqualScalar = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config;\n  var compareUnits = (0, _compareUnits.createCompareUnits)({\n    typed: typed\n  });\n\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x === y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return (0, _number.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.eq(y) || (0, _nearlyEqual.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.equals(y);\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (0, _complex.complexEquals)(x, y, config.epsilon);\n    }\n  }, compareUnits);\n});\nexports.createEqualScalar = createEqualScalar;\nvar createEqualScalarNumber = (0, _factory.factory)(name, ['typed', 'config'], function (_ref2) {\n  var typed = _ref2.typed,\n    config = _ref2.config;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return (0, _number.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\nexports.createEqualScalarNumber = createEqualScalarNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","createEqualScalarNumber","createEqualScalar","_nearlyEqual","require","_number","_factory","_complex","_compareUnits","name","dependencies","factory","_ref","typed","config","compareUnits","createCompareUnits","booleanBoolean","x","y","numberNumber","nearlyEqual","epsilon","BigNumberBigNumber","eq","FractionFraction","equals","ComplexComplex","complexEquals","_ref2"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/relational/equalScalar.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEqualScalarNumber = exports.createEqualScalar = void 0;\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _complex = require(\"../../utils/complex.js\");\nvar _compareUnits = require(\"./compareUnits.js\");\nvar name = 'equalScalar';\nvar dependencies = ['typed', 'config'];\nvar createEqualScalar = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config;\n  var compareUnits = (0, _compareUnits.createCompareUnits)({\n    typed: typed\n  });\n\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x === y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return (0, _number.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.eq(y) || (0, _nearlyEqual.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.equals(y);\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (0, _complex.complexEquals)(x, y, config.epsilon);\n    }\n  }, compareUnits);\n});\nexports.createEqualScalar = createEqualScalar;\nvar createEqualScalarNumber = (0, _factory.factory)(name, ['typed', 'config'], function (_ref2) {\n  var typed = _ref2.typed,\n    config = _ref2.config;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return (0, _number.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\nexports.createEqualScalarNumber = createEqualScalarNumber;"],"mappings":"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"},"metadata":{},"sourceType":"script"}