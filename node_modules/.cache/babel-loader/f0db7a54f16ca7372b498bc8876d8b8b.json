{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNot = void 0;\nvar _collection = require(\"../../utils/collection.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'not';\nvar dependencies = ['typed'];\nvar createNot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Logical `not`. Flips boolean value of a given parameter.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.not(x)\n   *\n   * Examples:\n   *\n   *    math.not(2)      // returns false\n   *    math.not(0)      // returns true\n   *    math.not(true)   // returns false\n   *\n   *    a = [2, -7, 0]\n   *    math.not(a)      // returns [false, false, true]\n   *\n   * See also:\n   *\n   *    and, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when input is a zero or empty value.\n   */\n  return typed(name, {\n    'null | undefined': function nullUndefined() {\n      return true;\n    },\n    number: _index.notNumber,\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isZero() || x.isNaN();\n    },\n    Unit: typed.referToSelf(function (self) {\n      return function (x) {\n        return typed.find(self, x.valueType())(x.value);\n      };\n    }),\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        return (0, _collection.deepMap)(x, self);\n      };\n    })\n  });\n});\nexports.createNot = createNot;","map":{"version":3,"names":["Object","defineProperty","exports","value","createNot","_collection","require","_factory","_index","name","dependencies","factory","_ref","typed","nullUndefined","number","notNumber","Complex","x","re","im","BigNumber","isZero","isNaN","Unit","referToSelf","self","find","valueType","deepMap"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/logical/not.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNot = void 0;\nvar _collection = require(\"../../utils/collection.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'not';\nvar dependencies = ['typed'];\nvar createNot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Logical `not`. Flips boolean value of a given parameter.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.not(x)\n   *\n   * Examples:\n   *\n   *    math.not(2)      // returns false\n   *    math.not(0)      // returns true\n   *    math.not(true)   // returns false\n   *\n   *    a = [2, -7, 0]\n   *    math.not(a)      // returns [false, false, true]\n   *\n   * See also:\n   *\n   *    and, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when input is a zero or empty value.\n   */\n  return typed(name, {\n    'null | undefined': function nullUndefined() {\n      return true;\n    },\n    number: _index.notNumber,\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isZero() || x.isNaN();\n    },\n    Unit: typed.referToSelf(function (self) {\n      return function (x) {\n        return typed.find(self, x.valueType())(x.value);\n      };\n    }),\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        return (0, _collection.deepMap)(x, self);\n      };\n    })\n  });\n});\nexports.createNot = createNot;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,IAAIC,WAAW,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACtD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIE,MAAM,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AACnD,IAAIG,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIN,SAAS,GAAG,eAAe,CAAC,CAAC,EAAEG,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACvF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjB,kBAAkB,EAAE,SAASK,aAAa,GAAG;MAC3C,OAAO,IAAI;IACb,CAAC;IACDC,MAAM,EAAEP,MAAM,CAACQ,SAAS;IACxBC,OAAO,EAAE,SAASA,OAAO,CAACC,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACC,EAAE,KAAK,CAAC,IAAID,CAAC,CAACE,EAAE,KAAK,CAAC;IACjC,CAAC;IACDC,SAAS,EAAE,SAASA,SAAS,CAACH,CAAC,EAAE;MAC/B,OAAOA,CAAC,CAACI,MAAM,EAAE,IAAIJ,CAAC,CAACK,KAAK,EAAE;IAChC,CAAC;IACDC,IAAI,EAAEX,KAAK,CAACY,WAAW,CAAC,UAAUC,IAAI,EAAE;MACtC,OAAO,UAAUR,CAAC,EAAE;QAClB,OAAOL,KAAK,CAACc,IAAI,CAACD,IAAI,EAAER,CAAC,CAACU,SAAS,EAAE,CAAC,CAACV,CAAC,CAACf,KAAK,CAAC;MACjD,CAAC;IACH,CAAC,CAAC;IACF,gBAAgB,EAAEU,KAAK,CAACY,WAAW,CAAC,UAAUC,IAAI,EAAE;MAClD,OAAO,UAAUR,CAAC,EAAE;QAClB,OAAO,CAAC,CAAC,EAAEb,WAAW,CAACwB,OAAO,EAAEX,CAAC,EAAEQ,IAAI,CAAC;MAC1C,CAAC;IACH,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AACFxB,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}