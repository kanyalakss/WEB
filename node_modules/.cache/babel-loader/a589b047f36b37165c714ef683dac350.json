{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCosh = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _number = require(\"../../utils/number.js\");\nvar name = 'cosh';\nvar dependencies = ['typed'];\nvar createCosh = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Calculate the hyperbolic cosine of a value,\n   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.\n   *\n   * To avoid confusion with the matrix hyperbolic cosine, this function does\n   * not apply to matrices.\n   *\n   * Syntax:\n   *\n   *    math.cosh(x)\n   *\n   * Examples:\n   *\n   *    math.cosh(0.5)       // returns number 1.1276259652063807\n   *\n   * See also:\n   *\n   *    sinh, tanh\n   *\n   * @param {number | BigNumber | Complex} x  Function input\n   * @return {number | BigNumber | Complex} Hyperbolic cosine of x\n   */\n  return typed(name, {\n    number: _number.cosh,\n    'Complex | BigNumber': function ComplexBigNumber(x) {\n      return x.cosh();\n    }\n  });\n});\nexports.createCosh = createCosh;","map":{"version":3,"names":["Object","defineProperty","exports","value","createCosh","_factory","require","_number","name","dependencies","factory","_ref","typed","number","cosh","ComplexBigNumber","x"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/trigonometry/cosh.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCosh = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _number = require(\"../../utils/number.js\");\nvar name = 'cosh';\nvar dependencies = ['typed'];\nvar createCosh = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Calculate the hyperbolic cosine of a value,\n   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.\n   *\n   * To avoid confusion with the matrix hyperbolic cosine, this function does\n   * not apply to matrices.\n   *\n   * Syntax:\n   *\n   *    math.cosh(x)\n   *\n   * Examples:\n   *\n   *    math.cosh(0.5)       // returns number 1.1276259652063807\n   *\n   * See also:\n   *\n   *    sinh, tanh\n   *\n   * @param {number | BigNumber | Complex} x  Function input\n   * @return {number | BigNumber | Complex} Hyperbolic cosine of x\n   */\n  return typed(name, {\n    number: _number.cosh,\n    'Complex | BigNumber': function ComplexBigNumber(x) {\n      return x.cosh();\n    }\n  });\n});\nexports.createCosh = createCosh;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIC,OAAO,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC9C,IAAIE,IAAI,GAAG,MAAM;AACjB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIL,UAAU,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACK,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACxF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjBK,MAAM,EAAEN,OAAO,CAACO,IAAI;IACpB,qBAAqB,EAAE,SAASC,gBAAgB,CAACC,CAAC,EAAE;MAClD,OAAOA,CAAC,CAACF,IAAI,EAAE;IACjB;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFZ,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script"}