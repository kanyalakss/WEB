{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createXor = void 0;\nvar _matAlgo03xDSf = require(\"../../type/matrix/utils/matAlgo03xDSf.js\");\nvar _matAlgo07xSSf = require(\"../../type/matrix/utils/matAlgo07xSSf.js\");\nvar _matAlgo12xSfs = require(\"../../type/matrix/utils/matAlgo12xSfs.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _matrixAlgorithmSuite = require(\"../../type/matrix/utils/matrixAlgorithmSuite.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'xor';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix'];\nvar createXor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    DenseMatrix = _ref.DenseMatrix;\n  var matAlgo03xDSf = (0, _matAlgo03xDSf.createMatAlgo03xDSf)({\n    typed: typed\n  });\n  var matAlgo07xSSf = (0, _matAlgo07xSSf.createMatAlgo07xSSf)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matAlgo12xSfs = (0, _matAlgo12xSfs.createMatAlgo12xSfs)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matrixAlgorithmSuite = (0, _matrixAlgorithmSuite.createMatrixAlgorithmSuite)({\n    typed: typed,\n    matrix: matrix\n  });\n\n  /**\n   * Logical `xor`. Test whether one and only one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.xor(x, y)\n   *\n   * Examples:\n   *\n   *    math.xor(2, 4)   // returns false\n   *\n   *    a = [2, 0, 0]\n   *    b = [2, 7, 0]\n   *    c = 0\n   *\n   *    math.xor(a, b)   // returns [false, true, false]\n   *    math.xor(a, c)   // returns [true, false, false]\n   *\n   * See also:\n   *\n   *    and, not, or\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when one and only one input is defined with a nonzero/nonempty value.\n   */\n  return typed(name, {\n    'number, number': _index.xorNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) !== (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return (!x.isZero() && !x.isNaN()) !== (!y.isZero() && !y.isNaN());\n    },\n    'Unit, Unit': typed.referToSelf(function (self) {\n      return function (x, y) {\n        return self(x.value || 0, y.value || 0);\n      };\n    })\n  }, matrixAlgorithmSuite({\n    SS: matAlgo07xSSf,\n    DS: matAlgo03xDSf,\n    Ss: matAlgo12xSfs\n  }));\n});\nexports.createXor = createXor;","map":{"version":3,"names":["Object","defineProperty","exports","value","createXor","_matAlgo03xDSf","require","_matAlgo07xSSf","_matAlgo12xSfs","_factory","_matrixAlgorithmSuite","_index","name","dependencies","factory","_ref","typed","matrix","DenseMatrix","matAlgo03xDSf","createMatAlgo03xDSf","matAlgo07xSSf","createMatAlgo07xSSf","matAlgo12xSfs","createMatAlgo12xSfs","matrixAlgorithmSuite","createMatrixAlgorithmSuite","xorNumber","ComplexComplex","x","y","re","im","BigNumberBigNumber","isZero","isNaN","referToSelf","self","SS","DS","Ss"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/logical/xor.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createXor = void 0;\nvar _matAlgo03xDSf = require(\"../../type/matrix/utils/matAlgo03xDSf.js\");\nvar _matAlgo07xSSf = require(\"../../type/matrix/utils/matAlgo07xSSf.js\");\nvar _matAlgo12xSfs = require(\"../../type/matrix/utils/matAlgo12xSfs.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _matrixAlgorithmSuite = require(\"../../type/matrix/utils/matrixAlgorithmSuite.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'xor';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix'];\nvar createXor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    DenseMatrix = _ref.DenseMatrix;\n  var matAlgo03xDSf = (0, _matAlgo03xDSf.createMatAlgo03xDSf)({\n    typed: typed\n  });\n  var matAlgo07xSSf = (0, _matAlgo07xSSf.createMatAlgo07xSSf)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matAlgo12xSfs = (0, _matAlgo12xSfs.createMatAlgo12xSfs)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matrixAlgorithmSuite = (0, _matrixAlgorithmSuite.createMatrixAlgorithmSuite)({\n    typed: typed,\n    matrix: matrix\n  });\n\n  /**\n   * Logical `xor`. Test whether one and only one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.xor(x, y)\n   *\n   * Examples:\n   *\n   *    math.xor(2, 4)   // returns false\n   *\n   *    a = [2, 0, 0]\n   *    b = [2, 7, 0]\n   *    c = 0\n   *\n   *    math.xor(a, b)   // returns [false, true, false]\n   *    math.xor(a, c)   // returns [true, false, false]\n   *\n   * See also:\n   *\n   *    and, not, or\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when one and only one input is defined with a nonzero/nonempty value.\n   */\n  return typed(name, {\n    'number, number': _index.xorNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) !== (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return (!x.isZero() && !x.isNaN()) !== (!y.isZero() && !y.isNaN());\n    },\n    'Unit, Unit': typed.referToSelf(function (self) {\n      return function (x, y) {\n        return self(x.value || 0, y.value || 0);\n      };\n    })\n  }, matrixAlgorithmSuite({\n    SS: matAlgo07xSSf,\n    DS: matAlgo03xDSf,\n    Ss: matAlgo12xSfs\n  }));\n});\nexports.createXor = createXor;"],"mappings":"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"},"metadata":{},"sourceType":"script"}