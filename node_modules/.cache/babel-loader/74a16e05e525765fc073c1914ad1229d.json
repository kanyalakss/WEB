{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIsZero = void 0;\nvar _collection = require(\"../../utils/collection.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'isZero';\nvar dependencies = ['typed'];\nvar createIsZero = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Test whether a value is zero.\n   * The function can check for zero for types `number`, `BigNumber`, `Fraction`,\n   * `Complex`, and `Unit`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isZero(x)\n   *\n   * Examples:\n   *\n   *    math.isZero(0)                      // returns true\n   *    math.isZero(2)                      // returns false\n   *    math.isZero(0.5)                    // returns false\n   *    math.isZero(math.bignumber(0))      // returns true\n   *    math.isZero(math.fraction(0))       // returns true\n   *    math.isZero(math.fraction(1,3))     // returns false\n   *    math.isZero(math.complex('2 - 4i')) // returns false\n   *    math.isZero(math.complex('0i'))     // returns true\n   *    math.isZero('0')                    // returns true\n   *    math.isZero('2')                    // returns false\n   *    math.isZero([2, 0, -3])             // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isInteger\n   *\n   * @param {number | BigNumber | Complex | Fraction | Unit | Array | Matrix} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n  return typed(name, {\n    number: _index.isZeroNumber,\n    BigNumber: function BigNumber(x) {\n      return x.isZero();\n    },\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    Fraction: function Fraction(x) {\n      return x.d === 1 && x.n === 0;\n    },\n    Unit: typed.referToSelf(function (self) {\n      return function (x) {\n        return typed.find(self, x.valueType())(x.value);\n      };\n    }),\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        return (0, _collection.deepMap)(x, self);\n      };\n    })\n  });\n});\nexports.createIsZero = createIsZero;","map":{"version":3,"names":["Object","defineProperty","exports","value","createIsZero","_collection","require","_factory","_index","name","dependencies","factory","_ref","typed","number","isZeroNumber","BigNumber","x","isZero","Complex","re","im","Fraction","d","n","Unit","referToSelf","self","find","valueType","deepMap"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/utils/isZero.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIsZero = void 0;\nvar _collection = require(\"../../utils/collection.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'isZero';\nvar dependencies = ['typed'];\nvar createIsZero = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Test whether a value is zero.\n   * The function can check for zero for types `number`, `BigNumber`, `Fraction`,\n   * `Complex`, and `Unit`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isZero(x)\n   *\n   * Examples:\n   *\n   *    math.isZero(0)                      // returns true\n   *    math.isZero(2)                      // returns false\n   *    math.isZero(0.5)                    // returns false\n   *    math.isZero(math.bignumber(0))      // returns true\n   *    math.isZero(math.fraction(0))       // returns true\n   *    math.isZero(math.fraction(1,3))     // returns false\n   *    math.isZero(math.complex('2 - 4i')) // returns false\n   *    math.isZero(math.complex('0i'))     // returns true\n   *    math.isZero('0')                    // returns true\n   *    math.isZero('2')                    // returns false\n   *    math.isZero([2, 0, -3])             // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isInteger\n   *\n   * @param {number | BigNumber | Complex | Fraction | Unit | Array | Matrix} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n  return typed(name, {\n    number: _index.isZeroNumber,\n    BigNumber: function BigNumber(x) {\n      return x.isZero();\n    },\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    Fraction: function Fraction(x) {\n      return x.d === 1 && x.n === 0;\n    },\n    Unit: typed.referToSelf(function (self) {\n      return function (x) {\n        return typed.find(self, x.valueType())(x.value);\n      };\n    }),\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        return (0, _collection.deepMap)(x, self);\n      };\n    })\n  });\n});\nexports.createIsZero = createIsZero;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,WAAW,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACtD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIE,MAAM,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AACnD,IAAIG,IAAI,GAAG,QAAQ;AACnB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIN,YAAY,GAAG,eAAe,CAAC,CAAC,EAAEG,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC1F,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjBK,MAAM,EAAEN,MAAM,CAACO,YAAY;IAC3BC,SAAS,EAAE,SAASA,SAAS,CAACC,CAAC,EAAE;MAC/B,OAAOA,CAAC,CAACC,MAAM,EAAE;IACnB,CAAC;IACDC,OAAO,EAAE,SAASA,OAAO,CAACF,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACG,EAAE,KAAK,CAAC,IAAIH,CAAC,CAACI,EAAE,KAAK,CAAC;IACjC,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQ,CAACL,CAAC,EAAE;MAC7B,OAAOA,CAAC,CAACM,CAAC,KAAK,CAAC,IAAIN,CAAC,CAACO,CAAC,KAAK,CAAC;IAC/B,CAAC;IACDC,IAAI,EAAEZ,KAAK,CAACa,WAAW,CAAC,UAAUC,IAAI,EAAE;MACtC,OAAO,UAAUV,CAAC,EAAE;QAClB,OAAOJ,KAAK,CAACe,IAAI,CAACD,IAAI,EAAEV,CAAC,CAACY,SAAS,EAAE,CAAC,CAACZ,CAAC,CAACd,KAAK,CAAC;MACjD,CAAC;IACH,CAAC,CAAC;IACF,gBAAgB,EAAEU,KAAK,CAACa,WAAW,CAAC,UAAUC,IAAI,EAAE;MAClD,OAAO,UAAUV,CAAC,EAAE;QAClB,OAAO,CAAC,CAAC,EAAEZ,WAAW,CAACyB,OAAO,EAAEb,CAAC,EAAEU,IAAI,CAAC;MAC1C,CAAC;IACH,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AACFzB,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}