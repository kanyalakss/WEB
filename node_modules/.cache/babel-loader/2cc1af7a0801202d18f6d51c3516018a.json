{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.embeddedDocs = void 0;\nvar _e = require(\"./constants/e.js\");\nvar _false = require(\"./constants/false.js\");\nvar _i = require(\"./constants/i.js\");\nvar _Infinity = require(\"./constants/Infinity.js\");\nvar _LN = require(\"./constants/LN10.js\");\nvar _LN2 = require(\"./constants/LN2.js\");\nvar _LOG10E = require(\"./constants/LOG10E.js\");\nvar _LOG2E = require(\"./constants/LOG2E.js\");\nvar _NaN = require(\"./constants/NaN.js\");\nvar _null = require(\"./constants/null.js\");\nvar _phi = require(\"./constants/phi.js\");\nvar _pi = require(\"./constants/pi.js\");\nvar _SQRT1_ = require(\"./constants/SQRT1_2.js\");\nvar _SQRT = require(\"./constants/SQRT2.js\");\nvar _tau = require(\"./constants/tau.js\");\nvar _true = require(\"./constants/true.js\");\nvar _version = require(\"./constants/version.js\");\nvar _bignumber = require(\"./construction/bignumber.js\");\nvar _boolean = require(\"./construction/boolean.js\");\nvar _complex = require(\"./construction/complex.js\");\nvar _createUnit = require(\"./construction/createUnit.js\");\nvar _fraction = require(\"./construction/fraction.js\");\nvar _index = require(\"./construction/index.js\");\nvar _matrix = require(\"./construction/matrix.js\");\nvar _number = require(\"./construction/number.js\");\nvar _sparse = require(\"./construction/sparse.js\");\nvar _splitUnit = require(\"./construction/splitUnit.js\");\nvar _string = require(\"./construction/string.js\");\nvar _unit = require(\"./construction/unit.js\");\nvar _config = require(\"./core/config.js\");\nvar _import = require(\"./core/import.js\");\nvar _typed = require(\"./core/typed.js\");\nvar _derivative = require(\"./function/algebra/derivative.js\");\nvar _leafCount = require(\"./function/algebra/leafCount.js\");\nvar _lsolve = require(\"./function/algebra/lsolve.js\");\nvar _lsolveAll = require(\"./function/algebra/lsolveAll.js\");\nvar _lup = require(\"./function/algebra/lup.js\");\nvar _lusolve = require(\"./function/algebra/lusolve.js\");\nvar _qr = require(\"./function/algebra/qr.js\");\nvar _rationalize = require(\"./function/algebra/rationalize.js\");\nvar _resolve = require(\"./function/algebra/resolve.js\");\nvar _simplify = require(\"./function/algebra/simplify.js\");\nvar _simplifyConstant = require(\"./function/algebra/simplifyConstant.js\");\nvar _simplifyCore = require(\"./function/algebra/simplifyCore.js\");\nvar _slu = require(\"./function/algebra/slu.js\");\nvar _symbolicEqual = require(\"./function/algebra/symbolicEqual.js\");\nvar _usolve = require(\"./function/algebra/usolve.js\");\nvar _usolveAll = require(\"./function/algebra/usolveAll.js\");\nvar _abs = require(\"./function/arithmetic/abs.js\");\nvar _add = require(\"./function/arithmetic/add.js\");\nvar _cbrt = require(\"./function/arithmetic/cbrt.js\");\nvar _ceil = require(\"./function/arithmetic/ceil.js\");\nvar _cube = require(\"./function/arithmetic/cube.js\");\nvar _divide = require(\"./function/arithmetic/divide.js\");\nvar _dotDivide = require(\"./function/arithmetic/dotDivide.js\");\nvar _dotMultiply = require(\"./function/arithmetic/dotMultiply.js\");\nvar _dotPow = require(\"./function/arithmetic/dotPow.js\");\nvar _exp = require(\"./function/arithmetic/exp.js\");\nvar _expm = require(\"./function/arithmetic/expm.js\");\nvar _expm2 = require(\"./function/arithmetic/expm1.js\");\nvar _fix = require(\"./function/arithmetic/fix.js\");\nvar _floor = require(\"./function/arithmetic/floor.js\");\nvar _gcd = require(\"./function/arithmetic/gcd.js\");\nvar _hypot = require(\"./function/arithmetic/hypot.js\");\nvar _invmod = require(\"./function/arithmetic/invmod.js\");\nvar _lcm = require(\"./function/arithmetic/lcm.js\");\nvar _log = require(\"./function/arithmetic/log.js\");\nvar _log2 = require(\"./function/arithmetic/log10.js\");\nvar _log1p = require(\"./function/arithmetic/log1p.js\");\nvar _log3 = require(\"./function/arithmetic/log2.js\");\nvar _mod = require(\"./function/arithmetic/mod.js\");\nvar _multiply = require(\"./function/arithmetic/multiply.js\");\nvar _norm = require(\"./function/arithmetic/norm.js\");\nvar _nthRoot = require(\"./function/arithmetic/nthRoot.js\");\nvar _nthRoots = require(\"./function/arithmetic/nthRoots.js\");\nvar _pow = require(\"./function/arithmetic/pow.js\");\nvar _round = require(\"./function/arithmetic/round.js\");\nvar _sign = require(\"./function/arithmetic/sign.js\");\nvar _sqrt = require(\"./function/arithmetic/sqrt.js\");\nvar _sqrtm = require(\"./function/arithmetic/sqrtm.js\");\nvar _square = require(\"./function/arithmetic/square.js\");\nvar _subtract = require(\"./function/arithmetic/subtract.js\");\nvar _unaryMinus = require(\"./function/arithmetic/unaryMinus.js\");\nvar _unaryPlus = require(\"./function/arithmetic/unaryPlus.js\");\nvar _xgcd = require(\"./function/arithmetic/xgcd.js\");\nvar _bitAnd = require(\"./function/bitwise/bitAnd.js\");\nvar _bitNot = require(\"./function/bitwise/bitNot.js\");\nvar _bitOr = require(\"./function/bitwise/bitOr.js\");\nvar _bitXor = require(\"./function/bitwise/bitXor.js\");\nvar _leftShift = require(\"./function/bitwise/leftShift.js\");\nvar _rightArithShift = require(\"./function/bitwise/rightArithShift.js\");\nvar _rightLogShift = require(\"./function/bitwise/rightLogShift.js\");\nvar _bellNumbers = require(\"./function/combinatorics/bellNumbers.js\");\nvar _catalan = require(\"./function/combinatorics/catalan.js\");\nvar _composition = require(\"./function/combinatorics/composition.js\");\nvar _stirlingS = require(\"./function/combinatorics/stirlingS2.js\");\nvar _arg = require(\"./function/complex/arg.js\");\nvar _conj = require(\"./function/complex/conj.js\");\nvar _im = require(\"./function/complex/im.js\");\nvar _re = require(\"./function/complex/re.js\");\nvar _evaluate = require(\"./function/expression/evaluate.js\");\nvar _help = require(\"./function/expression/help.js\");\nvar _distance = require(\"./function/geometry/distance.js\");\nvar _intersect = require(\"./function/geometry/intersect.js\");\nvar _and = require(\"./function/logical/and.js\");\nvar _not = require(\"./function/logical/not.js\");\nvar _or = require(\"./function/logical/or.js\");\nvar _xor = require(\"./function/logical/xor.js\");\nvar _column = require(\"./function/matrix/column.js\");\nvar _concat = require(\"./function/matrix/concat.js\");\nvar _count = require(\"./function/matrix/count.js\");\nvar _cross = require(\"./function/matrix/cross.js\");\nvar _ctranspose = require(\"./function/matrix/ctranspose.js\");\nvar _det = require(\"./function/matrix/det.js\");\nvar _diag = require(\"./function/matrix/diag.js\");\nvar _diff = require(\"./function/matrix/diff.js\");\nvar _dot = require(\"./function/matrix/dot.js\");\nvar _eigs = require(\"./function/matrix/eigs.js\");\nvar _filter = require(\"./function/matrix/filter.js\");\nvar _flatten = require(\"./function/matrix/flatten.js\");\nvar _forEach = require(\"./function/matrix/forEach.js\");\nvar _getMatrixDataType = require(\"./function/matrix/getMatrixDataType.js\");\nvar _identity = require(\"./function/matrix/identity.js\");\nvar _inv = require(\"./function/matrix/inv.js\");\nvar _pinv = require(\"./function/matrix/pinv.js\");\nvar _kron = require(\"./function/matrix/kron.js\");\nvar _map = require(\"./function/matrix/map.js\");\nvar _matrixFromColumns = require(\"./function/matrix/matrixFromColumns.js\");\nvar _matrixFromFunction = require(\"./function/matrix/matrixFromFunction.js\");\nvar _matrixFromRows = require(\"./function/matrix/matrixFromRows.js\");\nvar _ones = require(\"./function/matrix/ones.js\");\nvar _partitionSelect = require(\"./function/matrix/partitionSelect.js\");\nvar _range = require(\"./function/matrix/range.js\");\nvar _reshape = require(\"./function/matrix/reshape.js\");\nvar _resize = require(\"./function/matrix/resize.js\");\nvar _rotate = require(\"./function/matrix/rotate.js\");\nvar _rotationMatrix = require(\"./function/matrix/rotationMatrix.js\");\nvar _row = require(\"./function/matrix/row.js\");\nvar _size = require(\"./function/matrix/size.js\");\nvar _sort = require(\"./function/matrix/sort.js\");\nvar _squeeze = require(\"./function/matrix/squeeze.js\");\nvar _subset = require(\"./function/matrix/subset.js\");\nvar _trace = require(\"./function/matrix/trace.js\");\nvar _transpose = require(\"./function/matrix/transpose.js\");\nvar _zeros = require(\"./function/matrix/zeros.js\");\nvar _fft = require(\"./function/matrix/fft.js\");\nvar _ifft = require(\"./function/matrix/ifft.js\");\nvar _combinations = require(\"./function/probability/combinations.js\");\nvar _combinationsWithRep = require(\"./function/probability/combinationsWithRep.js\");\nvar _factorial = require(\"./function/probability/factorial.js\");\nvar _gamma = require(\"./function/probability/gamma.js\");\nvar _lgamma = require(\"./function/probability/lgamma.js\");\nvar _kldivergence = require(\"./function/probability/kldivergence.js\");\nvar _multinomial = require(\"./function/probability/multinomial.js\");\nvar _permutations = require(\"./function/probability/permutations.js\");\nvar _pickRandom = require(\"./function/probability/pickRandom.js\");\nvar _random = require(\"./function/probability/random.js\");\nvar _randomInt = require(\"./function/probability/randomInt.js\");\nvar _compare = require(\"./function/relational/compare.js\");\nvar _compareNatural = require(\"./function/relational/compareNatural.js\");\nvar _compareText = require(\"./function/relational/compareText.js\");\nvar _deepEqual = require(\"./function/relational/deepEqual.js\");\nvar _equal = require(\"./function/relational/equal.js\");\nvar _equalText = require(\"./function/relational/equalText.js\");\nvar _larger = require(\"./function/relational/larger.js\");\nvar _largerEq = require(\"./function/relational/largerEq.js\");\nvar _smaller = require(\"./function/relational/smaller.js\");\nvar _smallerEq = require(\"./function/relational/smallerEq.js\");\nvar _unequal = require(\"./function/relational/unequal.js\");\nvar _setCartesian = require(\"./function/set/setCartesian.js\");\nvar _setDifference = require(\"./function/set/setDifference.js\");\nvar _setDistinct = require(\"./function/set/setDistinct.js\");\nvar _setIntersect = require(\"./function/set/setIntersect.js\");\nvar _setIsSubset = require(\"./function/set/setIsSubset.js\");\nvar _setMultiplicity = require(\"./function/set/setMultiplicity.js\");\nvar _setPowerset = require(\"./function/set/setPowerset.js\");\nvar _setSize = require(\"./function/set/setSize.js\");\nvar _setSymDifference = require(\"./function/set/setSymDifference.js\");\nvar _setUnion = require(\"./function/set/setUnion.js\");\nvar _erf = require(\"./function/special/erf.js\");\nvar _mad = require(\"./function/statistics/mad.js\");\nvar _max = require(\"./function/statistics/max.js\");\nvar _mean = require(\"./function/statistics/mean.js\");\nvar _median = require(\"./function/statistics/median.js\");\nvar _min = require(\"./function/statistics/min.js\");\nvar _mode = require(\"./function/statistics/mode.js\");\nvar _prod = require(\"./function/statistics/prod.js\");\nvar _quantileSeq = require(\"./function/statistics/quantileSeq.js\");\nvar _std = require(\"./function/statistics/std.js\");\nvar _cumsum = require(\"./function/statistics/cumsum.js\");\nvar _sum = require(\"./function/statistics/sum.js\");\nvar _variance = require(\"./function/statistics/variance.js\");\nvar _acos = require(\"./function/trigonometry/acos.js\");\nvar _acosh = require(\"./function/trigonometry/acosh.js\");\nvar _acot = require(\"./function/trigonometry/acot.js\");\nvar _acoth = require(\"./function/trigonometry/acoth.js\");\nvar _acsc = require(\"./function/trigonometry/acsc.js\");\nvar _acsch = require(\"./function/trigonometry/acsch.js\");\nvar _asec = require(\"./function/trigonometry/asec.js\");\nvar _asech = require(\"./function/trigonometry/asech.js\");\nvar _asin = require(\"./function/trigonometry/asin.js\");\nvar _asinh = require(\"./function/trigonometry/asinh.js\");\nvar _atan = require(\"./function/trigonometry/atan.js\");\nvar _atan2 = require(\"./function/trigonometry/atan2.js\");\nvar _atanh = require(\"./function/trigonometry/atanh.js\");\nvar _cos = require(\"./function/trigonometry/cos.js\");\nvar _cosh = require(\"./function/trigonometry/cosh.js\");\nvar _cot = require(\"./function/trigonometry/cot.js\");\nvar _coth = require(\"./function/trigonometry/coth.js\");\nvar _csc = require(\"./function/trigonometry/csc.js\");\nvar _csch = require(\"./function/trigonometry/csch.js\");\nvar _sec = require(\"./function/trigonometry/sec.js\");\nvar _sech = require(\"./function/trigonometry/sech.js\");\nvar _sin = require(\"./function/trigonometry/sin.js\");\nvar _sinh = require(\"./function/trigonometry/sinh.js\");\nvar _tan = require(\"./function/trigonometry/tan.js\");\nvar _tanh = require(\"./function/trigonometry/tanh.js\");\nvar _to = require(\"./function/units/to.js\");\nvar _bin = require(\"./function/utils/bin.js\");\nvar _clone = require(\"./function/utils/clone.js\");\nvar _format = require(\"./function/utils/format.js\");\nvar _hasNumericValue = require(\"./function/utils/hasNumericValue.js\");\nvar _hex = require(\"./function/utils/hex.js\");\nvar _isInteger = require(\"./function/utils/isInteger.js\");\nvar _isNaN = require(\"./function/utils/isNaN.js\");\nvar _isNegative = require(\"./function/utils/isNegative.js\");\nvar _isNumeric = require(\"./function/utils/isNumeric.js\");\nvar _isPositive = require(\"./function/utils/isPositive.js\");\nvar _isPrime = require(\"./function/utils/isPrime.js\");\nvar _isZero = require(\"./function/utils/isZero.js\");\nvar _numeric = require(\"./function/utils/numeric.js\");\nvar _oct = require(\"./function/utils/oct.js\");\nvar _print = require(\"./function/utils/print.js\");\nvar _typeOf = require(\"./function/utils/typeOf.js\");\nvar embeddedDocs = {\n  // construction functions\n  bignumber: _bignumber.bignumberDocs,\n  \"boolean\": _boolean.booleanDocs,\n  complex: _complex.complexDocs,\n  createUnit: _createUnit.createUnitDocs,\n  fraction: _fraction.fractionDocs,\n  index: _index.indexDocs,\n  matrix: _matrix.matrixDocs,\n  number: _number.numberDocs,\n  sparse: _sparse.sparseDocs,\n  splitUnit: _splitUnit.splitUnitDocs,\n  string: _string.stringDocs,\n  unit: _unit.unitDocs,\n  // constants\n  e: _e.eDocs,\n  E: _e.eDocs,\n  \"false\": _false.falseDocs,\n  i: _i.iDocs,\n  Infinity: _Infinity.InfinityDocs,\n  LN2: _LN2.LN2Docs,\n  LN10: _LN.LN10Docs,\n  LOG2E: _LOG2E.LOG2EDocs,\n  LOG10E: _LOG10E.LOG10EDocs,\n  NaN: _NaN.NaNDocs,\n  \"null\": _null.nullDocs,\n  pi: _pi.piDocs,\n  PI: _pi.piDocs,\n  phi: _phi.phiDocs,\n  SQRT1_2: _SQRT1_.SQRT12Docs,\n  SQRT2: _SQRT.SQRT2Docs,\n  tau: _tau.tauDocs,\n  \"true\": _true.trueDocs,\n  version: _version.versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: _derivative.derivativeDocs,\n  lsolve: _lsolve.lsolveDocs,\n  lsolveAll: _lsolveAll.lsolveAllDocs,\n  lup: _lup.lupDocs,\n  lusolve: _lusolve.lusolveDocs,\n  leafCount: _leafCount.leafCountDocs,\n  resolve: _resolve.resolveDocs,\n  simplify: _simplify.simplifyDocs,\n  simplifyConstant: _simplifyConstant.simplifyConstantDocs,\n  simplifyCore: _simplifyCore.simplifyCoreDocs,\n  symbolicEqual: _symbolicEqual.symbolicEqualDocs,\n  rationalize: _rationalize.rationalizeDocs,\n  slu: _slu.sluDocs,\n  usolve: _usolve.usolveDocs,\n  usolveAll: _usolveAll.usolveAllDocs,\n  qr: _qr.qrDocs,\n  // functions - arithmetic\n  abs: _abs.absDocs,\n  add: _add.addDocs,\n  cbrt: _cbrt.cbrtDocs,\n  ceil: _ceil.ceilDocs,\n  cube: _cube.cubeDocs,\n  divide: _divide.divideDocs,\n  dotDivide: _dotDivide.dotDivideDocs,\n  dotMultiply: _dotMultiply.dotMultiplyDocs,\n  dotPow: _dotPow.dotPowDocs,\n  exp: _exp.expDocs,\n  expm: _expm.expmDocs,\n  expm1: _expm2.expm1Docs,\n  fix: _fix.fixDocs,\n  floor: _floor.floorDocs,\n  gcd: _gcd.gcdDocs,\n  hypot: _hypot.hypotDocs,\n  lcm: _lcm.lcmDocs,\n  log: _log.logDocs,\n  log2: _log3.log2Docs,\n  log1p: _log1p.log1pDocs,\n  log10: _log2.log10Docs,\n  mod: _mod.modDocs,\n  multiply: _multiply.multiplyDocs,\n  norm: _norm.normDocs,\n  nthRoot: _nthRoot.nthRootDocs,\n  nthRoots: _nthRoots.nthRootsDocs,\n  pow: _pow.powDocs,\n  round: _round.roundDocs,\n  sign: _sign.signDocs,\n  sqrt: _sqrt.sqrtDocs,\n  sqrtm: _sqrtm.sqrtmDocs,\n  square: _square.squareDocs,\n  subtract: _subtract.subtractDocs,\n  unaryMinus: _unaryMinus.unaryMinusDocs,\n  unaryPlus: _unaryPlus.unaryPlusDocs,\n  xgcd: _xgcd.xgcdDocs,\n  invmod: _invmod.invmodDocs,\n  // functions - bitwise\n  bitAnd: _bitAnd.bitAndDocs,\n  bitNot: _bitNot.bitNotDocs,\n  bitOr: _bitOr.bitOrDocs,\n  bitXor: _bitXor.bitXorDocs,\n  leftShift: _leftShift.leftShiftDocs,\n  rightArithShift: _rightArithShift.rightArithShiftDocs,\n  rightLogShift: _rightLogShift.rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: _bellNumbers.bellNumbersDocs,\n  catalan: _catalan.catalanDocs,\n  composition: _composition.compositionDocs,\n  stirlingS2: _stirlingS.stirlingS2Docs,\n  // functions - core\n  config: _config.configDocs,\n  \"import\": _import.importDocs,\n  typed: _typed.typedDocs,\n  // functions - complex\n  arg: _arg.argDocs,\n  conj: _conj.conjDocs,\n  re: _re.reDocs,\n  im: _im.imDocs,\n  // functions - expression\n  evaluate: _evaluate.evaluateDocs,\n  help: _help.helpDocs,\n  // functions - geometry\n  distance: _distance.distanceDocs,\n  intersect: _intersect.intersectDocs,\n  // functions - logical\n  and: _and.andDocs,\n  not: _not.notDocs,\n  or: _or.orDocs,\n  xor: _xor.xorDocs,\n  // functions - matrix\n  concat: _concat.concatDocs,\n  count: _count.countDocs,\n  cross: _cross.crossDocs,\n  column: _column.columnDocs,\n  ctranspose: _ctranspose.ctransposeDocs,\n  det: _det.detDocs,\n  diag: _diag.diagDocs,\n  diff: _diff.diffDocs,\n  dot: _dot.dotDocs,\n  getMatrixDataType: _getMatrixDataType.getMatrixDataTypeDocs,\n  identity: _identity.identityDocs,\n  filter: _filter.filterDocs,\n  flatten: _flatten.flattenDocs,\n  forEach: _forEach.forEachDocs,\n  inv: _inv.invDocs,\n  pinv: _pinv.pinvDocs,\n  eigs: _eigs.eigsDocs,\n  kron: _kron.kronDocs,\n  matrixFromFunction: _matrixFromFunction.matrixFromFunctionDocs,\n  matrixFromRows: _matrixFromRows.matrixFromRowsDocs,\n  matrixFromColumns: _matrixFromColumns.matrixFromColumnsDocs,\n  map: _map.mapDocs,\n  ones: _ones.onesDocs,\n  partitionSelect: _partitionSelect.partitionSelectDocs,\n  range: _range.rangeDocs,\n  resize: _resize.resizeDocs,\n  reshape: _reshape.reshapeDocs,\n  rotate: _rotate.rotateDocs,\n  rotationMatrix: _rotationMatrix.rotationMatrixDocs,\n  row: _row.rowDocs,\n  size: _size.sizeDocs,\n  sort: _sort.sortDocs,\n  squeeze: _squeeze.squeezeDocs,\n  subset: _subset.subsetDocs,\n  trace: _trace.traceDocs,\n  transpose: _transpose.transposeDocs,\n  zeros: _zeros.zerosDocs,\n  fft: _fft.fftDocs,\n  ifft: _ifft.ifftDocs,\n  // functions - probability\n  combinations: _combinations.combinationsDocs,\n  combinationsWithRep: _combinationsWithRep.combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: _factorial.factorialDocs,\n  gamma: _gamma.gammaDocs,\n  kldivergence: _kldivergence.kldivergenceDocs,\n  lgamma: _lgamma.lgammaDocs,\n  multinomial: _multinomial.multinomialDocs,\n  permutations: _permutations.permutationsDocs,\n  pickRandom: _pickRandom.pickRandomDocs,\n  random: _random.randomDocs,\n  randomInt: _randomInt.randomIntDocs,\n  // functions - relational\n  compare: _compare.compareDocs,\n  compareNatural: _compareNatural.compareNaturalDocs,\n  compareText: _compareText.compareTextDocs,\n  deepEqual: _deepEqual.deepEqualDocs,\n  equal: _equal.equalDocs,\n  equalText: _equalText.equalTextDocs,\n  larger: _larger.largerDocs,\n  largerEq: _largerEq.largerEqDocs,\n  smaller: _smaller.smallerDocs,\n  smallerEq: _smallerEq.smallerEqDocs,\n  unequal: _unequal.unequalDocs,\n  // functions - set\n  setCartesian: _setCartesian.setCartesianDocs,\n  setDifference: _setDifference.setDifferenceDocs,\n  setDistinct: _setDistinct.setDistinctDocs,\n  setIntersect: _setIntersect.setIntersectDocs,\n  setIsSubset: _setIsSubset.setIsSubsetDocs,\n  setMultiplicity: _setMultiplicity.setMultiplicityDocs,\n  setPowerset: _setPowerset.setPowersetDocs,\n  setSize: _setSize.setSizeDocs,\n  setSymDifference: _setSymDifference.setSymDifferenceDocs,\n  setUnion: _setUnion.setUnionDocs,\n  // functions - special\n  erf: _erf.erfDocs,\n  // functions - statistics\n  cumsum: _cumsum.cumSumDocs,\n  mad: _mad.madDocs,\n  max: _max.maxDocs,\n  mean: _mean.meanDocs,\n  median: _median.medianDocs,\n  min: _min.minDocs,\n  mode: _mode.modeDocs,\n  prod: _prod.prodDocs,\n  quantileSeq: _quantileSeq.quantileSeqDocs,\n  std: _std.stdDocs,\n  sum: _sum.sumDocs,\n  variance: _variance.varianceDocs,\n  // functions - trigonometry\n  acos: _acos.acosDocs,\n  acosh: _acosh.acoshDocs,\n  acot: _acot.acotDocs,\n  acoth: _acoth.acothDocs,\n  acsc: _acsc.acscDocs,\n  acsch: _acsch.acschDocs,\n  asec: _asec.asecDocs,\n  asech: _asech.asechDocs,\n  asin: _asin.asinDocs,\n  asinh: _asinh.asinhDocs,\n  atan: _atan.atanDocs,\n  atanh: _atanh.atanhDocs,\n  atan2: _atan2.atan2Docs,\n  cos: _cos.cosDocs,\n  cosh: _cosh.coshDocs,\n  cot: _cot.cotDocs,\n  coth: _coth.cothDocs,\n  csc: _csc.cscDocs,\n  csch: _csch.cschDocs,\n  sec: _sec.secDocs,\n  sech: _sech.sechDocs,\n  sin: _sin.sinDocs,\n  sinh: _sinh.sinhDocs,\n  tan: _tan.tanDocs,\n  tanh: _tanh.tanhDocs,\n  // functions - units\n  to: _to.toDocs,\n  // functions - utils\n  clone: _clone.cloneDocs,\n  format: _format.formatDocs,\n  bin: _bin.binDocs,\n  oct: _oct.octDocs,\n  hex: _hex.hexDocs,\n  isNaN: _isNaN.isNaNDocs,\n  isInteger: _isInteger.isIntegerDocs,\n  isNegative: _isNegative.isNegativeDocs,\n  isNumeric: _isNumeric.isNumericDocs,\n  hasNumericValue: _hasNumericValue.hasNumericValueDocs,\n  isPositive: _isPositive.isPositiveDocs,\n  isPrime: _isPrime.isPrimeDocs,\n  isZero: _isZero.isZeroDocs,\n  print: _print.printDocs,\n  typeOf: _typeOf.typeOfDocs,\n  numeric: _numeric.numericDocs\n};\nexports.embeddedDocs = embeddedDocs;","map":{"version":3,"names":["Object","defineProperty","exports","value","embeddedDocs","_e","require","_false","_i","_Infinity","_LN","_LN2","_LOG10E","_LOG2E","_NaN","_null","_phi","_pi","_SQRT1_","_SQRT","_tau","_true","_version","_bignumber","_boolean","_complex","_createUnit","_fraction","_index","_matrix","_number","_sparse","_splitUnit","_string","_unit","_config","_import","_typed","_derivative","_leafCount","_lsolve","_lsolveAll","_lup","_lusolve","_qr","_rationalize","_resolve","_simplify","_simplifyConstant","_simplifyCore","_slu","_symbolicEqual","_usolve","_usolveAll","_abs","_add","_cbrt","_ceil","_cube","_divide","_dotDivide","_dotMultiply","_dotPow","_exp","_expm","_expm2","_fix","_floor","_gcd","_hypot","_invmod","_lcm","_log","_log2","_log1p","_log3","_mod","_multiply","_norm","_nthRoot","_nthRoots","_pow","_round","_sign","_sqrt","_sqrtm","_square","_subtract","_unaryMinus","_unaryPlus","_xgcd","_bitAnd","_bitNot","_bitOr","_bitXor","_leftShift","_rightArithShift","_rightLogShift","_bellNumbers","_catalan","_composition","_stirlingS","_arg","_conj","_im","_re","_evaluate","_help","_distance","_intersect","_and","_not","_or","_xor","_column","_concat","_count","_cross","_ctranspose","_det","_diag","_diff","_dot","_eigs","_filter","_flatten","_forEach","_getMatrixDataType","_identity","_inv","_pinv","_kron","_map","_matrixFromColumns","_matrixFromFunction","_matrixFromRows","_ones","_partitionSelect","_range","_reshape","_resize","_rotate","_rotationMatrix","_row","_size","_sort","_squeeze","_subset","_trace","_transpose","_zeros","_fft","_ifft","_combinations","_combinationsWithRep","_factorial","_gamma","_lgamma","_kldivergence","_multinomial","_permutations","_pickRandom","_random","_randomInt","_compare","_compareNatural","_compareText","_deepEqual","_equal","_equalText","_larger","_largerEq","_smaller","_smallerEq","_unequal","_setCartesian","_setDifference","_setDistinct","_setIntersect","_setIsSubset","_setMultiplicity","_setPowerset","_setSize","_setSymDifference","_setUnion","_erf","_mad","_max","_mean","_median","_min","_mode","_prod","_quantileSeq","_std","_cumsum","_sum","_variance","_acos","_acosh","_acot","_acoth","_acsc","_acsch","_asec","_asech","_asin","_asinh","_atan","_atan2","_atanh","_cos","_cosh","_cot","_coth","_csc","_csch","_sec","_sech","_sin","_sinh","_tan","_tanh","_to","_bin","_clone","_format","_hasNumericValue","_hex","_isInteger","_isNaN","_isNegative","_isNumeric","_isPositive","_isPrime","_isZero","_numeric","_oct","_print","_typeOf","bignumber","bignumberDocs","booleanDocs","complex","complexDocs","createUnit","createUnitDocs","fraction","fractionDocs","index","indexDocs","matrix","matrixDocs","number","numberDocs","sparse","sparseDocs","splitUnit","splitUnitDocs","string","stringDocs","unit","unitDocs","e","eDocs","E","falseDocs","i","iDocs","Infinity","InfinityDocs","LN2","LN2Docs","LN10","LN10Docs","LOG2E","LOG2EDocs","LOG10E","LOG10EDocs","NaN","NaNDocs","nullDocs","pi","piDocs","PI","phi","phiDocs","SQRT1_2","SQRT12Docs","SQRT2","SQRT2Docs","tau","tauDocs","trueDocs","version","versionDocs","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","derivativeDocs","lsolve","lsolveDocs","lsolveAll","lsolveAllDocs","lup","lupDocs","lusolve","lusolveDocs","leafCount","leafCountDocs","resolve","resolveDocs","simplify","simplifyDocs","simplifyConstant","simplifyConstantDocs","simplifyCore","simplifyCoreDocs","symbolicEqual","symbolicEqualDocs","rationalize","rationalizeDocs","slu","sluDocs","usolve","usolveDocs","usolveAll","usolveAllDocs","qr","qrDocs","abs","absDocs","add","addDocs","cbrt","cbrtDocs","ceil","ceilDocs","cube","cubeDocs","divide","divideDocs","dotDivide","dotDivideDocs","dotMultiply","dotMultiplyDocs","dotPow","dotPowDocs","exp","expDocs","expm","expmDocs","expm1","expm1Docs","fix","fixDocs","floor","floorDocs","gcd","gcdDocs","hypot","hypotDocs","lcm","lcmDocs","log","logDocs","log2","log2Docs","log1p","log1pDocs","log10","log10Docs","mod","modDocs","multiply","multiplyDocs","norm","normDocs","nthRoot","nthRootDocs","nthRoots","nthRootsDocs","pow","powDocs","round","roundDocs","sign","signDocs","sqrt","sqrtDocs","sqrtm","sqrtmDocs","square","squareDocs","subtract","subtractDocs","unaryMinus","unaryMinusDocs","unaryPlus","unaryPlusDocs","xgcd","xgcdDocs","invmod","invmodDocs","bitAnd","bitAndDocs","bitNot","bitNotDocs","bitOr","bitOrDocs","bitXor","bitXorDocs","leftShift","leftShiftDocs","rightArithShift","rightArithShiftDocs","rightLogShift","rightLogShiftDocs","bellNumbers","bellNumbersDocs","catalan","catalanDocs","composition","compositionDocs","stirlingS2","stirlingS2Docs","config","configDocs","importDocs","typed","typedDocs","arg","argDocs","conj","conjDocs","re","reDocs","im","imDocs","evaluate","evaluateDocs","help","helpDocs","distance","distanceDocs","intersect","intersectDocs","and","andDocs","not","notDocs","or","orDocs","xor","xorDocs","concat","concatDocs","count","countDocs","cross","crossDocs","column","columnDocs","ctranspose","ctransposeDocs","det","detDocs","diag","diagDocs","diff","diffDocs","dot","dotDocs","getMatrixDataType","getMatrixDataTypeDocs","identity","identityDocs","filter","filterDocs","flatten","flattenDocs","forEach","forEachDocs","inv","invDocs","pinv","pinvDocs","eigs","eigsDocs","kron","kronDocs","matrixFromFunction","matrixFromFunctionDocs","matrixFromRows","matrixFromRowsDocs","matrixFromColumns","matrixFromColumnsDocs","map","mapDocs","ones","onesDocs","partitionSelect","partitionSelectDocs","range","rangeDocs","resize","resizeDocs","reshape","reshapeDocs","rotate","rotateDocs","rotationMatrix","rotationMatrixDocs","row","rowDocs","size","sizeDocs","sort","sortDocs","squeeze","squeezeDocs","subset","subsetDocs","trace","traceDocs","transpose","transposeDocs","zeros","zerosDocs","fft","fftDocs","ifft","ifftDocs","combinations","combinationsDocs","combinationsWithRep","combinationsWithRepDocs","factorial","factorialDocs","gamma","gammaDocs","kldivergence","kldivergenceDocs","lgamma","lgammaDocs","multinomial","multinomialDocs","permutations","permutationsDocs","pickRandom","pickRandomDocs","random","randomDocs","randomInt","randomIntDocs","compare","compareDocs","compareNatural","compareNaturalDocs","compareText","compareTextDocs","deepEqual","deepEqualDocs","equal","equalDocs","equalText","equalTextDocs","larger","largerDocs","largerEq","largerEqDocs","smaller","smallerDocs","smallerEq","smallerEqDocs","unequal","unequalDocs","setCartesian","setCartesianDocs","setDifference","setDifferenceDocs","setDistinct","setDistinctDocs","setIntersect","setIntersectDocs","setIsSubset","setIsSubsetDocs","setMultiplicity","setMultiplicityDocs","setPowerset","setPowersetDocs","setSize","setSizeDocs","setSymDifference","setSymDifferenceDocs","setUnion","setUnionDocs","erf","erfDocs","cumsum","cumSumDocs","mad","madDocs","max","maxDocs","mean","meanDocs","median","medianDocs","min","minDocs","mode","modeDocs","prod","prodDocs","quantileSeq","quantileSeqDocs","std","stdDocs","sum","sumDocs","variance","varianceDocs","acos","acosDocs","acosh","acoshDocs","acot","acotDocs","acoth","acothDocs","acsc","acscDocs","acsch","acschDocs","asec","asecDocs","asech","asechDocs","asin","asinDocs","asinh","asinhDocs","atan","atanDocs","atanh","atanhDocs","atan2","atan2Docs","cos","cosDocs","cosh","coshDocs","cot","cotDocs","coth","cothDocs","csc","cscDocs","csch","cschDocs","sec","secDocs","sech","sechDocs","sin","sinDocs","sinh","sinhDocs","tan","tanDocs","tanh","tanhDocs","to","toDocs","clone","cloneDocs","format","formatDocs","bin","binDocs","oct","octDocs","hex","hexDocs","isNaN","isNaNDocs","isInteger","isIntegerDocs","isNegative","isNegativeDocs","isNumeric","isNumericDocs","hasNumericValue","hasNumericValueDocs","isPositive","isPositiveDocs","isPrime","isPrimeDocs","isZero","isZeroDocs","print","printDocs","typeOf","typeOfDocs","numeric","numericDocs"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/expression/embeddedDocs/embeddedDocs.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.embeddedDocs = void 0;\nvar _e = require(\"./constants/e.js\");\nvar _false = require(\"./constants/false.js\");\nvar _i = require(\"./constants/i.js\");\nvar _Infinity = require(\"./constants/Infinity.js\");\nvar _LN = require(\"./constants/LN10.js\");\nvar _LN2 = require(\"./constants/LN2.js\");\nvar _LOG10E = require(\"./constants/LOG10E.js\");\nvar _LOG2E = require(\"./constants/LOG2E.js\");\nvar _NaN = require(\"./constants/NaN.js\");\nvar _null = require(\"./constants/null.js\");\nvar _phi = require(\"./constants/phi.js\");\nvar _pi = require(\"./constants/pi.js\");\nvar _SQRT1_ = require(\"./constants/SQRT1_2.js\");\nvar _SQRT = require(\"./constants/SQRT2.js\");\nvar _tau = require(\"./constants/tau.js\");\nvar _true = require(\"./constants/true.js\");\nvar _version = require(\"./constants/version.js\");\nvar _bignumber = require(\"./construction/bignumber.js\");\nvar _boolean = require(\"./construction/boolean.js\");\nvar _complex = require(\"./construction/complex.js\");\nvar _createUnit = require(\"./construction/createUnit.js\");\nvar _fraction = require(\"./construction/fraction.js\");\nvar _index = require(\"./construction/index.js\");\nvar _matrix = require(\"./construction/matrix.js\");\nvar _number = require(\"./construction/number.js\");\nvar _sparse = require(\"./construction/sparse.js\");\nvar _splitUnit = require(\"./construction/splitUnit.js\");\nvar _string = require(\"./construction/string.js\");\nvar _unit = require(\"./construction/unit.js\");\nvar _config = require(\"./core/config.js\");\nvar _import = require(\"./core/import.js\");\nvar _typed = require(\"./core/typed.js\");\nvar _derivative = require(\"./function/algebra/derivative.js\");\nvar _leafCount = require(\"./function/algebra/leafCount.js\");\nvar _lsolve = require(\"./function/algebra/lsolve.js\");\nvar _lsolveAll = require(\"./function/algebra/lsolveAll.js\");\nvar _lup = require(\"./function/algebra/lup.js\");\nvar _lusolve = require(\"./function/algebra/lusolve.js\");\nvar _qr = require(\"./function/algebra/qr.js\");\nvar _rationalize = require(\"./function/algebra/rationalize.js\");\nvar _resolve = require(\"./function/algebra/resolve.js\");\nvar _simplify = require(\"./function/algebra/simplify.js\");\nvar _simplifyConstant = require(\"./function/algebra/simplifyConstant.js\");\nvar _simplifyCore = require(\"./function/algebra/simplifyCore.js\");\nvar _slu = require(\"./function/algebra/slu.js\");\nvar _symbolicEqual = require(\"./function/algebra/symbolicEqual.js\");\nvar _usolve = require(\"./function/algebra/usolve.js\");\nvar _usolveAll = require(\"./function/algebra/usolveAll.js\");\nvar _abs = require(\"./function/arithmetic/abs.js\");\nvar _add = require(\"./function/arithmetic/add.js\");\nvar _cbrt = require(\"./function/arithmetic/cbrt.js\");\nvar _ceil = require(\"./function/arithmetic/ceil.js\");\nvar _cube = require(\"./function/arithmetic/cube.js\");\nvar _divide = require(\"./function/arithmetic/divide.js\");\nvar _dotDivide = require(\"./function/arithmetic/dotDivide.js\");\nvar _dotMultiply = require(\"./function/arithmetic/dotMultiply.js\");\nvar _dotPow = require(\"./function/arithmetic/dotPow.js\");\nvar _exp = require(\"./function/arithmetic/exp.js\");\nvar _expm = require(\"./function/arithmetic/expm.js\");\nvar _expm2 = require(\"./function/arithmetic/expm1.js\");\nvar _fix = require(\"./function/arithmetic/fix.js\");\nvar _floor = require(\"./function/arithmetic/floor.js\");\nvar _gcd = require(\"./function/arithmetic/gcd.js\");\nvar _hypot = require(\"./function/arithmetic/hypot.js\");\nvar _invmod = require(\"./function/arithmetic/invmod.js\");\nvar _lcm = require(\"./function/arithmetic/lcm.js\");\nvar _log = require(\"./function/arithmetic/log.js\");\nvar _log2 = require(\"./function/arithmetic/log10.js\");\nvar _log1p = require(\"./function/arithmetic/log1p.js\");\nvar _log3 = require(\"./function/arithmetic/log2.js\");\nvar _mod = require(\"./function/arithmetic/mod.js\");\nvar _multiply = require(\"./function/arithmetic/multiply.js\");\nvar _norm = require(\"./function/arithmetic/norm.js\");\nvar _nthRoot = require(\"./function/arithmetic/nthRoot.js\");\nvar _nthRoots = require(\"./function/arithmetic/nthRoots.js\");\nvar _pow = require(\"./function/arithmetic/pow.js\");\nvar _round = require(\"./function/arithmetic/round.js\");\nvar _sign = require(\"./function/arithmetic/sign.js\");\nvar _sqrt = require(\"./function/arithmetic/sqrt.js\");\nvar _sqrtm = require(\"./function/arithmetic/sqrtm.js\");\nvar _square = require(\"./function/arithmetic/square.js\");\nvar _subtract = require(\"./function/arithmetic/subtract.js\");\nvar _unaryMinus = require(\"./function/arithmetic/unaryMinus.js\");\nvar _unaryPlus = require(\"./function/arithmetic/unaryPlus.js\");\nvar _xgcd = require(\"./function/arithmetic/xgcd.js\");\nvar _bitAnd = require(\"./function/bitwise/bitAnd.js\");\nvar _bitNot = require(\"./function/bitwise/bitNot.js\");\nvar _bitOr = require(\"./function/bitwise/bitOr.js\");\nvar _bitXor = require(\"./function/bitwise/bitXor.js\");\nvar _leftShift = require(\"./function/bitwise/leftShift.js\");\nvar _rightArithShift = require(\"./function/bitwise/rightArithShift.js\");\nvar _rightLogShift = require(\"./function/bitwise/rightLogShift.js\");\nvar _bellNumbers = require(\"./function/combinatorics/bellNumbers.js\");\nvar _catalan = require(\"./function/combinatorics/catalan.js\");\nvar _composition = require(\"./function/combinatorics/composition.js\");\nvar _stirlingS = require(\"./function/combinatorics/stirlingS2.js\");\nvar _arg = require(\"./function/complex/arg.js\");\nvar _conj = require(\"./function/complex/conj.js\");\nvar _im = require(\"./function/complex/im.js\");\nvar _re = require(\"./function/complex/re.js\");\nvar _evaluate = require(\"./function/expression/evaluate.js\");\nvar _help = require(\"./function/expression/help.js\");\nvar _distance = require(\"./function/geometry/distance.js\");\nvar _intersect = require(\"./function/geometry/intersect.js\");\nvar _and = require(\"./function/logical/and.js\");\nvar _not = require(\"./function/logical/not.js\");\nvar _or = require(\"./function/logical/or.js\");\nvar _xor = require(\"./function/logical/xor.js\");\nvar _column = require(\"./function/matrix/column.js\");\nvar _concat = require(\"./function/matrix/concat.js\");\nvar _count = require(\"./function/matrix/count.js\");\nvar _cross = require(\"./function/matrix/cross.js\");\nvar _ctranspose = require(\"./function/matrix/ctranspose.js\");\nvar _det = require(\"./function/matrix/det.js\");\nvar _diag = require(\"./function/matrix/diag.js\");\nvar _diff = require(\"./function/matrix/diff.js\");\nvar _dot = require(\"./function/matrix/dot.js\");\nvar _eigs = require(\"./function/matrix/eigs.js\");\nvar _filter = require(\"./function/matrix/filter.js\");\nvar _flatten = require(\"./function/matrix/flatten.js\");\nvar _forEach = require(\"./function/matrix/forEach.js\");\nvar _getMatrixDataType = require(\"./function/matrix/getMatrixDataType.js\");\nvar _identity = require(\"./function/matrix/identity.js\");\nvar _inv = require(\"./function/matrix/inv.js\");\nvar _pinv = require(\"./function/matrix/pinv.js\");\nvar _kron = require(\"./function/matrix/kron.js\");\nvar _map = require(\"./function/matrix/map.js\");\nvar _matrixFromColumns = require(\"./function/matrix/matrixFromColumns.js\");\nvar _matrixFromFunction = require(\"./function/matrix/matrixFromFunction.js\");\nvar _matrixFromRows = require(\"./function/matrix/matrixFromRows.js\");\nvar _ones = require(\"./function/matrix/ones.js\");\nvar _partitionSelect = require(\"./function/matrix/partitionSelect.js\");\nvar _range = require(\"./function/matrix/range.js\");\nvar _reshape = require(\"./function/matrix/reshape.js\");\nvar _resize = require(\"./function/matrix/resize.js\");\nvar _rotate = require(\"./function/matrix/rotate.js\");\nvar _rotationMatrix = require(\"./function/matrix/rotationMatrix.js\");\nvar _row = require(\"./function/matrix/row.js\");\nvar _size = require(\"./function/matrix/size.js\");\nvar _sort = require(\"./function/matrix/sort.js\");\nvar _squeeze = require(\"./function/matrix/squeeze.js\");\nvar _subset = require(\"./function/matrix/subset.js\");\nvar _trace = require(\"./function/matrix/trace.js\");\nvar _transpose = require(\"./function/matrix/transpose.js\");\nvar _zeros = require(\"./function/matrix/zeros.js\");\nvar _fft = require(\"./function/matrix/fft.js\");\nvar _ifft = require(\"./function/matrix/ifft.js\");\nvar _combinations = require(\"./function/probability/combinations.js\");\nvar _combinationsWithRep = require(\"./function/probability/combinationsWithRep.js\");\nvar _factorial = require(\"./function/probability/factorial.js\");\nvar _gamma = require(\"./function/probability/gamma.js\");\nvar _lgamma = require(\"./function/probability/lgamma.js\");\nvar _kldivergence = require(\"./function/probability/kldivergence.js\");\nvar _multinomial = require(\"./function/probability/multinomial.js\");\nvar _permutations = require(\"./function/probability/permutations.js\");\nvar _pickRandom = require(\"./function/probability/pickRandom.js\");\nvar _random = require(\"./function/probability/random.js\");\nvar _randomInt = require(\"./function/probability/randomInt.js\");\nvar _compare = require(\"./function/relational/compare.js\");\nvar _compareNatural = require(\"./function/relational/compareNatural.js\");\nvar _compareText = require(\"./function/relational/compareText.js\");\nvar _deepEqual = require(\"./function/relational/deepEqual.js\");\nvar _equal = require(\"./function/relational/equal.js\");\nvar _equalText = require(\"./function/relational/equalText.js\");\nvar _larger = require(\"./function/relational/larger.js\");\nvar _largerEq = require(\"./function/relational/largerEq.js\");\nvar _smaller = require(\"./function/relational/smaller.js\");\nvar _smallerEq = require(\"./function/relational/smallerEq.js\");\nvar _unequal = require(\"./function/relational/unequal.js\");\nvar _setCartesian = require(\"./function/set/setCartesian.js\");\nvar _setDifference = require(\"./function/set/setDifference.js\");\nvar _setDistinct = require(\"./function/set/setDistinct.js\");\nvar _setIntersect = require(\"./function/set/setIntersect.js\");\nvar _setIsSubset = require(\"./function/set/setIsSubset.js\");\nvar _setMultiplicity = require(\"./function/set/setMultiplicity.js\");\nvar _setPowerset = require(\"./function/set/setPowerset.js\");\nvar _setSize = require(\"./function/set/setSize.js\");\nvar _setSymDifference = require(\"./function/set/setSymDifference.js\");\nvar _setUnion = require(\"./function/set/setUnion.js\");\nvar _erf = require(\"./function/special/erf.js\");\nvar _mad = require(\"./function/statistics/mad.js\");\nvar _max = require(\"./function/statistics/max.js\");\nvar _mean = require(\"./function/statistics/mean.js\");\nvar _median = require(\"./function/statistics/median.js\");\nvar _min = require(\"./function/statistics/min.js\");\nvar _mode = require(\"./function/statistics/mode.js\");\nvar _prod = require(\"./function/statistics/prod.js\");\nvar _quantileSeq = require(\"./function/statistics/quantileSeq.js\");\nvar _std = require(\"./function/statistics/std.js\");\nvar _cumsum = require(\"./function/statistics/cumsum.js\");\nvar _sum = require(\"./function/statistics/sum.js\");\nvar _variance = require(\"./function/statistics/variance.js\");\nvar _acos = require(\"./function/trigonometry/acos.js\");\nvar _acosh = require(\"./function/trigonometry/acosh.js\");\nvar _acot = require(\"./function/trigonometry/acot.js\");\nvar _acoth = require(\"./function/trigonometry/acoth.js\");\nvar _acsc = require(\"./function/trigonometry/acsc.js\");\nvar _acsch = require(\"./function/trigonometry/acsch.js\");\nvar _asec = require(\"./function/trigonometry/asec.js\");\nvar _asech = require(\"./function/trigonometry/asech.js\");\nvar _asin = require(\"./function/trigonometry/asin.js\");\nvar _asinh = require(\"./function/trigonometry/asinh.js\");\nvar _atan = require(\"./function/trigonometry/atan.js\");\nvar _atan2 = require(\"./function/trigonometry/atan2.js\");\nvar _atanh = require(\"./function/trigonometry/atanh.js\");\nvar _cos = require(\"./function/trigonometry/cos.js\");\nvar _cosh = require(\"./function/trigonometry/cosh.js\");\nvar _cot = require(\"./function/trigonometry/cot.js\");\nvar _coth = require(\"./function/trigonometry/coth.js\");\nvar _csc = require(\"./function/trigonometry/csc.js\");\nvar _csch = require(\"./function/trigonometry/csch.js\");\nvar _sec = require(\"./function/trigonometry/sec.js\");\nvar _sech = require(\"./function/trigonometry/sech.js\");\nvar _sin = require(\"./function/trigonometry/sin.js\");\nvar _sinh = require(\"./function/trigonometry/sinh.js\");\nvar _tan = require(\"./function/trigonometry/tan.js\");\nvar _tanh = require(\"./function/trigonometry/tanh.js\");\nvar _to = require(\"./function/units/to.js\");\nvar _bin = require(\"./function/utils/bin.js\");\nvar _clone = require(\"./function/utils/clone.js\");\nvar _format = require(\"./function/utils/format.js\");\nvar _hasNumericValue = require(\"./function/utils/hasNumericValue.js\");\nvar _hex = require(\"./function/utils/hex.js\");\nvar _isInteger = require(\"./function/utils/isInteger.js\");\nvar _isNaN = require(\"./function/utils/isNaN.js\");\nvar _isNegative = require(\"./function/utils/isNegative.js\");\nvar _isNumeric = require(\"./function/utils/isNumeric.js\");\nvar _isPositive = require(\"./function/utils/isPositive.js\");\nvar _isPrime = require(\"./function/utils/isPrime.js\");\nvar _isZero = require(\"./function/utils/isZero.js\");\nvar _numeric = require(\"./function/utils/numeric.js\");\nvar _oct = require(\"./function/utils/oct.js\");\nvar _print = require(\"./function/utils/print.js\");\nvar _typeOf = require(\"./function/utils/typeOf.js\");\nvar embeddedDocs = {\n  // construction functions\n  bignumber: _bignumber.bignumberDocs,\n  \"boolean\": _boolean.booleanDocs,\n  complex: _complex.complexDocs,\n  createUnit: _createUnit.createUnitDocs,\n  fraction: _fraction.fractionDocs,\n  index: _index.indexDocs,\n  matrix: _matrix.matrixDocs,\n  number: _number.numberDocs,\n  sparse: _sparse.sparseDocs,\n  splitUnit: _splitUnit.splitUnitDocs,\n  string: _string.stringDocs,\n  unit: _unit.unitDocs,\n  // constants\n  e: _e.eDocs,\n  E: _e.eDocs,\n  \"false\": _false.falseDocs,\n  i: _i.iDocs,\n  Infinity: _Infinity.InfinityDocs,\n  LN2: _LN2.LN2Docs,\n  LN10: _LN.LN10Docs,\n  LOG2E: _LOG2E.LOG2EDocs,\n  LOG10E: _LOG10E.LOG10EDocs,\n  NaN: _NaN.NaNDocs,\n  \"null\": _null.nullDocs,\n  pi: _pi.piDocs,\n  PI: _pi.piDocs,\n  phi: _phi.phiDocs,\n  SQRT1_2: _SQRT1_.SQRT12Docs,\n  SQRT2: _SQRT.SQRT2Docs,\n  tau: _tau.tauDocs,\n  \"true\": _true.trueDocs,\n  version: _version.versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: _derivative.derivativeDocs,\n  lsolve: _lsolve.lsolveDocs,\n  lsolveAll: _lsolveAll.lsolveAllDocs,\n  lup: _lup.lupDocs,\n  lusolve: _lusolve.lusolveDocs,\n  leafCount: _leafCount.leafCountDocs,\n  resolve: _resolve.resolveDocs,\n  simplify: _simplify.simplifyDocs,\n  simplifyConstant: _simplifyConstant.simplifyConstantDocs,\n  simplifyCore: _simplifyCore.simplifyCoreDocs,\n  symbolicEqual: _symbolicEqual.symbolicEqualDocs,\n  rationalize: _rationalize.rationalizeDocs,\n  slu: _slu.sluDocs,\n  usolve: _usolve.usolveDocs,\n  usolveAll: _usolveAll.usolveAllDocs,\n  qr: _qr.qrDocs,\n  // functions - arithmetic\n  abs: _abs.absDocs,\n  add: _add.addDocs,\n  cbrt: _cbrt.cbrtDocs,\n  ceil: _ceil.ceilDocs,\n  cube: _cube.cubeDocs,\n  divide: _divide.divideDocs,\n  dotDivide: _dotDivide.dotDivideDocs,\n  dotMultiply: _dotMultiply.dotMultiplyDocs,\n  dotPow: _dotPow.dotPowDocs,\n  exp: _exp.expDocs,\n  expm: _expm.expmDocs,\n  expm1: _expm2.expm1Docs,\n  fix: _fix.fixDocs,\n  floor: _floor.floorDocs,\n  gcd: _gcd.gcdDocs,\n  hypot: _hypot.hypotDocs,\n  lcm: _lcm.lcmDocs,\n  log: _log.logDocs,\n  log2: _log3.log2Docs,\n  log1p: _log1p.log1pDocs,\n  log10: _log2.log10Docs,\n  mod: _mod.modDocs,\n  multiply: _multiply.multiplyDocs,\n  norm: _norm.normDocs,\n  nthRoot: _nthRoot.nthRootDocs,\n  nthRoots: _nthRoots.nthRootsDocs,\n  pow: _pow.powDocs,\n  round: _round.roundDocs,\n  sign: _sign.signDocs,\n  sqrt: _sqrt.sqrtDocs,\n  sqrtm: _sqrtm.sqrtmDocs,\n  square: _square.squareDocs,\n  subtract: _subtract.subtractDocs,\n  unaryMinus: _unaryMinus.unaryMinusDocs,\n  unaryPlus: _unaryPlus.unaryPlusDocs,\n  xgcd: _xgcd.xgcdDocs,\n  invmod: _invmod.invmodDocs,\n  // functions - bitwise\n  bitAnd: _bitAnd.bitAndDocs,\n  bitNot: _bitNot.bitNotDocs,\n  bitOr: _bitOr.bitOrDocs,\n  bitXor: _bitXor.bitXorDocs,\n  leftShift: _leftShift.leftShiftDocs,\n  rightArithShift: _rightArithShift.rightArithShiftDocs,\n  rightLogShift: _rightLogShift.rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: _bellNumbers.bellNumbersDocs,\n  catalan: _catalan.catalanDocs,\n  composition: _composition.compositionDocs,\n  stirlingS2: _stirlingS.stirlingS2Docs,\n  // functions - core\n  config: _config.configDocs,\n  \"import\": _import.importDocs,\n  typed: _typed.typedDocs,\n  // functions - complex\n  arg: _arg.argDocs,\n  conj: _conj.conjDocs,\n  re: _re.reDocs,\n  im: _im.imDocs,\n  // functions - expression\n  evaluate: _evaluate.evaluateDocs,\n  help: _help.helpDocs,\n  // functions - geometry\n  distance: _distance.distanceDocs,\n  intersect: _intersect.intersectDocs,\n  // functions - logical\n  and: _and.andDocs,\n  not: _not.notDocs,\n  or: _or.orDocs,\n  xor: _xor.xorDocs,\n  // functions - matrix\n  concat: _concat.concatDocs,\n  count: _count.countDocs,\n  cross: _cross.crossDocs,\n  column: _column.columnDocs,\n  ctranspose: _ctranspose.ctransposeDocs,\n  det: _det.detDocs,\n  diag: _diag.diagDocs,\n  diff: _diff.diffDocs,\n  dot: _dot.dotDocs,\n  getMatrixDataType: _getMatrixDataType.getMatrixDataTypeDocs,\n  identity: _identity.identityDocs,\n  filter: _filter.filterDocs,\n  flatten: _flatten.flattenDocs,\n  forEach: _forEach.forEachDocs,\n  inv: _inv.invDocs,\n  pinv: _pinv.pinvDocs,\n  eigs: _eigs.eigsDocs,\n  kron: _kron.kronDocs,\n  matrixFromFunction: _matrixFromFunction.matrixFromFunctionDocs,\n  matrixFromRows: _matrixFromRows.matrixFromRowsDocs,\n  matrixFromColumns: _matrixFromColumns.matrixFromColumnsDocs,\n  map: _map.mapDocs,\n  ones: _ones.onesDocs,\n  partitionSelect: _partitionSelect.partitionSelectDocs,\n  range: _range.rangeDocs,\n  resize: _resize.resizeDocs,\n  reshape: _reshape.reshapeDocs,\n  rotate: _rotate.rotateDocs,\n  rotationMatrix: _rotationMatrix.rotationMatrixDocs,\n  row: _row.rowDocs,\n  size: _size.sizeDocs,\n  sort: _sort.sortDocs,\n  squeeze: _squeeze.squeezeDocs,\n  subset: _subset.subsetDocs,\n  trace: _trace.traceDocs,\n  transpose: _transpose.transposeDocs,\n  zeros: _zeros.zerosDocs,\n  fft: _fft.fftDocs,\n  ifft: _ifft.ifftDocs,\n  // functions - probability\n  combinations: _combinations.combinationsDocs,\n  combinationsWithRep: _combinationsWithRep.combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: _factorial.factorialDocs,\n  gamma: _gamma.gammaDocs,\n  kldivergence: _kldivergence.kldivergenceDocs,\n  lgamma: _lgamma.lgammaDocs,\n  multinomial: _multinomial.multinomialDocs,\n  permutations: _permutations.permutationsDocs,\n  pickRandom: _pickRandom.pickRandomDocs,\n  random: _random.randomDocs,\n  randomInt: _randomInt.randomIntDocs,\n  // functions - relational\n  compare: _compare.compareDocs,\n  compareNatural: _compareNatural.compareNaturalDocs,\n  compareText: _compareText.compareTextDocs,\n  deepEqual: _deepEqual.deepEqualDocs,\n  equal: _equal.equalDocs,\n  equalText: _equalText.equalTextDocs,\n  larger: _larger.largerDocs,\n  largerEq: _largerEq.largerEqDocs,\n  smaller: _smaller.smallerDocs,\n  smallerEq: _smallerEq.smallerEqDocs,\n  unequal: _unequal.unequalDocs,\n  // functions - set\n  setCartesian: _setCartesian.setCartesianDocs,\n  setDifference: _setDifference.setDifferenceDocs,\n  setDistinct: _setDistinct.setDistinctDocs,\n  setIntersect: _setIntersect.setIntersectDocs,\n  setIsSubset: _setIsSubset.setIsSubsetDocs,\n  setMultiplicity: _setMultiplicity.setMultiplicityDocs,\n  setPowerset: _setPowerset.setPowersetDocs,\n  setSize: _setSize.setSizeDocs,\n  setSymDifference: _setSymDifference.setSymDifferenceDocs,\n  setUnion: _setUnion.setUnionDocs,\n  // functions - special\n  erf: _erf.erfDocs,\n  // functions - statistics\n  cumsum: _cumsum.cumSumDocs,\n  mad: _mad.madDocs,\n  max: _max.maxDocs,\n  mean: _mean.meanDocs,\n  median: _median.medianDocs,\n  min: _min.minDocs,\n  mode: _mode.modeDocs,\n  prod: _prod.prodDocs,\n  quantileSeq: _quantileSeq.quantileSeqDocs,\n  std: _std.stdDocs,\n  sum: _sum.sumDocs,\n  variance: _variance.varianceDocs,\n  // functions - trigonometry\n  acos: _acos.acosDocs,\n  acosh: _acosh.acoshDocs,\n  acot: _acot.acotDocs,\n  acoth: _acoth.acothDocs,\n  acsc: _acsc.acscDocs,\n  acsch: _acsch.acschDocs,\n  asec: _asec.asecDocs,\n  asech: _asech.asechDocs,\n  asin: _asin.asinDocs,\n  asinh: _asinh.asinhDocs,\n  atan: _atan.atanDocs,\n  atanh: _atanh.atanhDocs,\n  atan2: _atan2.atan2Docs,\n  cos: _cos.cosDocs,\n  cosh: _cosh.coshDocs,\n  cot: _cot.cotDocs,\n  coth: _coth.cothDocs,\n  csc: _csc.cscDocs,\n  csch: _csch.cschDocs,\n  sec: _sec.secDocs,\n  sech: _sech.sechDocs,\n  sin: _sin.sinDocs,\n  sinh: _sinh.sinhDocs,\n  tan: _tan.tanDocs,\n  tanh: _tanh.tanhDocs,\n  // functions - units\n  to: _to.toDocs,\n  // functions - utils\n  clone: _clone.cloneDocs,\n  format: _format.formatDocs,\n  bin: _bin.binDocs,\n  oct: _oct.octDocs,\n  hex: _hex.hexDocs,\n  isNaN: _isNaN.isNaNDocs,\n  isInteger: _isInteger.isIntegerDocs,\n  isNegative: _isNegative.isNegativeDocs,\n  isNumeric: _isNumeric.isNumericDocs,\n  hasNumericValue: _hasNumericValue.hasNumericValueDocs,\n  isPositive: _isPositive.isPositiveDocs,\n  isPrime: _isPrime.isPrimeDocs,\n  isZero: _isZero.isZeroDocs,\n  print: _print.printDocs,\n  typeOf: _typeOf.typeOfDocs,\n  numeric: _numeric.numericDocs\n};\nexports.embeddedDocs = embeddedDocs;"],"mappings":"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"},"metadata":{},"sourceType":"script"}