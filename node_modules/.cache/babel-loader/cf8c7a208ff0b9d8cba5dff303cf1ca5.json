{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAsech = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'asech';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nvar createAsech = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    Complex = _ref.Complex,\n    _BigNumber = _ref.BigNumber;\n  /**\n   * Calculate the hyperbolic arcsecant of a value,\n   * defined as `asech(x) = acosh(1/x) = ln(sqrt(1/x^2 - 1) + 1/x)`.\n   *\n   * To avoid confusion with the matrix hyperbolic arcsecant, this function\n   * does not apply to matrices.\n   *\n   * Syntax:\n   *\n   *    math.asech(x)\n   *\n   * Examples:\n   *\n   *    math.asech(0.5)       // returns 1.3169578969248166\n   *\n   * See also:\n   *\n   *    acsch, acoth\n   *\n   * @param {number | BigNumber | Complex} x  Function input\n   * @return {number | BigNumber | Complex} Hyperbolic arcsecant of x\n   */\n  return typed(name, {\n    number: function number(x) {\n      if (x <= 1 && x >= -1 || config.predictable) {\n        var xInv = 1 / x;\n        if (xInv > 0 || config.predictable) {\n          return (0, _index.asechNumber)(x);\n        }\n        var ret = Math.sqrt(xInv * xInv - 1);\n        return new Complex(Math.log(ret - xInv), Math.PI);\n      }\n      return new Complex(x, 0).asech();\n    },\n    Complex: function Complex(x) {\n      return x.asech();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).acosh();\n    }\n  });\n});\nexports.createAsech = createAsech;","map":{"version":3,"names":["Object","defineProperty","exports","value","createAsech","_factory","require","_index","name","dependencies","factory","_ref","typed","config","Complex","_BigNumber","BigNumber","number","x","predictable","xInv","asechNumber","ret","Math","sqrt","log","PI","asech","div","acosh"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/trigonometry/asech.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAsech = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'asech';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nvar createAsech = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    Complex = _ref.Complex,\n    _BigNumber = _ref.BigNumber;\n  /**\n   * Calculate the hyperbolic arcsecant of a value,\n   * defined as `asech(x) = acosh(1/x) = ln(sqrt(1/x^2 - 1) + 1/x)`.\n   *\n   * To avoid confusion with the matrix hyperbolic arcsecant, this function\n   * does not apply to matrices.\n   *\n   * Syntax:\n   *\n   *    math.asech(x)\n   *\n   * Examples:\n   *\n   *    math.asech(0.5)       // returns 1.3169578969248166\n   *\n   * See also:\n   *\n   *    acsch, acoth\n   *\n   * @param {number | BigNumber | Complex} x  Function input\n   * @return {number | BigNumber | Complex} Hyperbolic arcsecant of x\n   */\n  return typed(name, {\n    number: function number(x) {\n      if (x <= 1 && x >= -1 || config.predictable) {\n        var xInv = 1 / x;\n        if (xInv > 0 || config.predictable) {\n          return (0, _index.asechNumber)(x);\n        }\n        var ret = Math.sqrt(xInv * xInv - 1);\n        return new Complex(Math.log(ret - xInv), Math.PI);\n      }\n      return new Complex(x, 0).asech();\n    },\n    Complex: function Complex(x) {\n      return x.asech();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).acosh();\n    }\n  });\n});\nexports.createAsech = createAsech;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIC,MAAM,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AACnD,IAAIE,IAAI,GAAG,OAAO;AAClB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;AAC9D,IAAIL,WAAW,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACK,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACzF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACpBC,MAAM,GAAGF,IAAI,CAACE,MAAM;IACpBC,OAAO,GAAGH,IAAI,CAACG,OAAO;IACtBC,UAAU,GAAGJ,IAAI,CAACK,SAAS;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOJ,KAAK,CAACJ,IAAI,EAAE;IACjBS,MAAM,EAAE,SAASA,MAAM,CAACC,CAAC,EAAE;MACzB,IAAIA,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,CAAC,IAAIL,MAAM,CAACM,WAAW,EAAE;QAC3C,IAAIC,IAAI,GAAG,CAAC,GAAGF,CAAC;QAChB,IAAIE,IAAI,GAAG,CAAC,IAAIP,MAAM,CAACM,WAAW,EAAE;UAClC,OAAO,CAAC,CAAC,EAAEZ,MAAM,CAACc,WAAW,EAAEH,CAAC,CAAC;QACnC;QACA,IAAII,GAAG,GAAGC,IAAI,CAACC,IAAI,CAACJ,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAC;QACpC,OAAO,IAAIN,OAAO,CAACS,IAAI,CAACE,GAAG,CAACH,GAAG,GAAGF,IAAI,CAAC,EAAEG,IAAI,CAACG,EAAE,CAAC;MACnD;MACA,OAAO,IAAIZ,OAAO,CAACI,CAAC,EAAE,CAAC,CAAC,CAACS,KAAK,EAAE;IAClC,CAAC;IACDb,OAAO,EAAE,SAASA,OAAO,CAACI,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACS,KAAK,EAAE;IAClB,CAAC;IACDX,SAAS,EAAE,SAASA,SAAS,CAACE,CAAC,EAAE;MAC/B,OAAO,IAAIH,UAAU,CAAC,CAAC,CAAC,CAACa,GAAG,CAACV,CAAC,CAAC,CAACW,KAAK,EAAE;IACzC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACF3B,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script"}