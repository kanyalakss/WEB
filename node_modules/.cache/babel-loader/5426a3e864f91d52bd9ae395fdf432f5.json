{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnd = void 0;\nvar _matAlgo02xDS = require(\"../../type/matrix/utils/matAlgo02xDS0.js\");\nvar _matAlgo11xS0s = require(\"../../type/matrix/utils/matAlgo11xS0s.js\");\nvar _matAlgo14xDs = require(\"../../type/matrix/utils/matAlgo14xDs.js\");\nvar _matAlgo06xS0S = require(\"../../type/matrix/utils/matAlgo06xS0S0.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _matrixAlgorithmSuite = require(\"../../type/matrix/utils/matrixAlgorithmSuite.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nvar createAnd = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    zeros = _ref.zeros,\n    not = _ref.not;\n  var matAlgo02xDS0 = (0, _matAlgo02xDS.createMatAlgo02xDS0)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var matAlgo06xS0S0 = (0, _matAlgo06xS0S.createMatAlgo06xS0S0)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var matAlgo11xS0s = (0, _matAlgo11xS0s.createMatAlgo11xS0s)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var matAlgo14xDs = (0, _matAlgo14xDs.createMatAlgo14xDs)({\n    typed: typed\n  });\n  var matrixAlgorithmSuite = (0, _matrixAlgorithmSuite.createMatrixAlgorithmSuite)({\n    typed: typed,\n    matrix: matrix\n  });\n\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n  return typed(name, {\n    'number, number': _index.andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': typed.referToSelf(function (self) {\n      return function (x, y) {\n        return self(x.value || 0, y.value || 0);\n      };\n    }),\n    'SparseMatrix, any': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(y)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo11xS0s(x, y, self, false);\n      };\n    }),\n    'DenseMatrix, any': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(y)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo14xDs(x, y, self, false);\n      };\n    }),\n    'any, SparseMatrix': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(x)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo11xS0s(y, x, self, true);\n      };\n    }),\n    'any, DenseMatrix': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(x)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo14xDs(y, x, self, true);\n      };\n    }),\n    'Array, any': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // use matrix implementation\n        return self(matrix(x), y).valueOf();\n      };\n    }),\n    'any, Array': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // use matrix implementation\n        return self(x, matrix(y)).valueOf();\n      };\n    })\n  }, matrixAlgorithmSuite({\n    SS: matAlgo06xS0S0,\n    DS: matAlgo02xDS0\n  }));\n});\nexports.createAnd = createAnd;","map":{"version":3,"names":["Object","defineProperty","exports","value","createAnd","_matAlgo02xDS","require","_matAlgo11xS0s","_matAlgo14xDs","_matAlgo06xS0S","_factory","_matrixAlgorithmSuite","_index","name","dependencies","factory","_ref","typed","matrix","equalScalar","zeros","not","matAlgo02xDS0","createMatAlgo02xDS0","matAlgo06xS0S0","createMatAlgo06xS0S0","matAlgo11xS0s","createMatAlgo11xS0s","matAlgo14xDs","createMatAlgo14xDs","matrixAlgorithmSuite","createMatrixAlgorithmSuite","andNumber","ComplexComplex","x","y","re","im","BigNumberBigNumber","isZero","isNaN","referToSelf","self","size","storage","valueOf","SS","DS"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/logical/and.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnd = void 0;\nvar _matAlgo02xDS = require(\"../../type/matrix/utils/matAlgo02xDS0.js\");\nvar _matAlgo11xS0s = require(\"../../type/matrix/utils/matAlgo11xS0s.js\");\nvar _matAlgo14xDs = require(\"../../type/matrix/utils/matAlgo14xDs.js\");\nvar _matAlgo06xS0S = require(\"../../type/matrix/utils/matAlgo06xS0S0.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _matrixAlgorithmSuite = require(\"../../type/matrix/utils/matrixAlgorithmSuite.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nvar createAnd = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    zeros = _ref.zeros,\n    not = _ref.not;\n  var matAlgo02xDS0 = (0, _matAlgo02xDS.createMatAlgo02xDS0)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var matAlgo06xS0S0 = (0, _matAlgo06xS0S.createMatAlgo06xS0S0)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var matAlgo11xS0s = (0, _matAlgo11xS0s.createMatAlgo11xS0s)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var matAlgo14xDs = (0, _matAlgo14xDs.createMatAlgo14xDs)({\n    typed: typed\n  });\n  var matrixAlgorithmSuite = (0, _matrixAlgorithmSuite.createMatrixAlgorithmSuite)({\n    typed: typed,\n    matrix: matrix\n  });\n\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n  return typed(name, {\n    'number, number': _index.andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': typed.referToSelf(function (self) {\n      return function (x, y) {\n        return self(x.value || 0, y.value || 0);\n      };\n    }),\n    'SparseMatrix, any': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(y)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo11xS0s(x, y, self, false);\n      };\n    }),\n    'DenseMatrix, any': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(y)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo14xDs(x, y, self, false);\n      };\n    }),\n    'any, SparseMatrix': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(x)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo11xS0s(y, x, self, true);\n      };\n    }),\n    'any, DenseMatrix': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // check scalar\n        if (not(x)) {\n          // return zero matrix\n          return zeros(x.size(), x.storage());\n        }\n        return matAlgo14xDs(y, x, self, true);\n      };\n    }),\n    'Array, any': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // use matrix implementation\n        return self(matrix(x), y).valueOf();\n      };\n    }),\n    'any, Array': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // use matrix implementation\n        return self(x, matrix(y)).valueOf();\n      };\n    })\n  }, matrixAlgorithmSuite({\n    SS: matAlgo06xS0S0,\n    DS: matAlgo02xDS0\n  }));\n});\nexports.createAnd = createAnd;"],"mappings":"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"},"metadata":{},"sourceType":"script"}