{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsCollections = containsCollections;\nexports.deepForEach = deepForEach;\nexports.deepMap = deepMap;\nexports.reduce = reduce;\nexports.scatter = scatter;\nvar _is = require(\"./is.js\");\nvar _IndexError = require(\"../error/IndexError.js\");\nvar _array = require(\"./array.js\");\nvar _switch2 = require(\"./switch.js\");\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\nfunction containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if ((0, _is.isCollection)(array[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\nfunction deepForEach(array, callback) {\n  if ((0, _is.isMatrix)(array)) {\n    array = array.valueOf();\n  }\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\nfunction deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\nfunction reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? (0, _array.arraySize)(mat) : mat.size();\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new _IndexError.IndexError(dim, size.length);\n  }\n  if ((0, _is.isMatrix)(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n      return val;\n    } else {\n      tran = (0, _switch2._switch)(mat);\n      ret = [];\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n      return ret;\n    }\n  } else {\n    ret = [];\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n    return ret;\n  }\n}\n\n// TODO: document function scatter\nfunction scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n\n  // vars\n  var k, k0, k1, i;\n\n  // check we need to process values (pattern matrix)\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k];\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark;\n        // add i to pattern of C\n        cindex.push(i);\n        // x(i) = A, check we need to call function this time\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]);\n          // function was called on current row\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]);\n        // function was called on current row\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k];\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark;\n        // add i to pattern of C\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","containsCollections","deepForEach","deepMap","reduce","scatter","_is","require","_IndexError","_array","_switch2","array","i","length","isCollection","callback","isMatrix","valueOf","ii","Array","isArray","skipZeros","map","x","mat","dim","size","arraySize","IndexError","create","_reduce","ret","val","tran","_switch","a","j","w","u","mark","cindex","f","inverse","update","avalues","_values","aindex","_index","aptr","_ptr","k","k0","k1","push"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/utils/collection.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsCollections = containsCollections;\nexports.deepForEach = deepForEach;\nexports.deepMap = deepMap;\nexports.reduce = reduce;\nexports.scatter = scatter;\nvar _is = require(\"./is.js\");\nvar _IndexError = require(\"../error/IndexError.js\");\nvar _array = require(\"./array.js\");\nvar _switch2 = require(\"./switch.js\");\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\nfunction containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if ((0, _is.isCollection)(array[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\nfunction deepForEach(array, callback) {\n  if ((0, _is.isMatrix)(array)) {\n    array = array.valueOf();\n  }\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\nfunction deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\nfunction reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? (0, _array.arraySize)(mat) : mat.size();\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new _IndexError.IndexError(dim, size.length);\n  }\n  if ((0, _is.isMatrix)(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n      return val;\n    } else {\n      tran = (0, _switch2._switch)(mat);\n      ret = [];\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n      return ret;\n    }\n  } else {\n    ret = [];\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n    return ret;\n  }\n}\n\n// TODO: document function scatter\nfunction scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n\n  // vars\n  var k, k0, k1, i;\n\n  // check we need to process values (pattern matrix)\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k];\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark;\n        // add i to pattern of C\n        cindex.push(i);\n        // x(i) = A, check we need to call function this time\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]);\n          // function was called on current row\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]);\n        // function was called on current row\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k];\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark;\n        // add i to pattern of C\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}