{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSec = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar _trigUnit = require(\"./trigUnit.js\");\nvar name = 'sec';\nvar dependencies = ['typed', 'BigNumber'];\nvar createSec = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    _BigNumber = _ref.BigNumber;\n  var trigUnit = (0, _trigUnit.createTrigUnit)({\n    typed: typed\n  });\n\n  /**\n   * Calculate the secant of a value, defined as `sec(x) = 1/cos(x)`.\n   *\n   * To avoid confusion with the matrix secant, this function does not\n   * apply to matrices.\n   *\n   * Syntax:\n   *\n   *    math.sec(x)\n   *\n   * Examples:\n   *\n   *    math.sec(2)      // returns number -2.4029979617223822\n   *    1 / math.cos(2)  // returns number -2.4029979617223822\n   *\n   * See also:\n   *\n   *    cos, csc, cot\n   *\n   * @param {number | BigNumber | Complex | Unit} x  Function input\n   * @return {number | BigNumber | Complex} Secant of x\n   */\n  return typed(name, {\n    number: _index.secNumber,\n    Complex: function Complex(x) {\n      return x.sec();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.cos());\n    }\n  }, trigUnit);\n});\nexports.createSec = createSec;","map":{"version":3,"names":["Object","defineProperty","exports","value","createSec","_factory","require","_index","_trigUnit","name","dependencies","factory","_ref","typed","_BigNumber","BigNumber","trigUnit","createTrigUnit","number","secNumber","Complex","x","sec","div","cos"],"sources":["C:/Users/Admin/Desktop/React-Web-main/node_modules/mathjs/lib/cjs/function/trigonometry/sec.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSec = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar _trigUnit = require(\"./trigUnit.js\");\nvar name = 'sec';\nvar dependencies = ['typed', 'BigNumber'];\nvar createSec = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    _BigNumber = _ref.BigNumber;\n  var trigUnit = (0, _trigUnit.createTrigUnit)({\n    typed: typed\n  });\n\n  /**\n   * Calculate the secant of a value, defined as `sec(x) = 1/cos(x)`.\n   *\n   * To avoid confusion with the matrix secant, this function does not\n   * apply to matrices.\n   *\n   * Syntax:\n   *\n   *    math.sec(x)\n   *\n   * Examples:\n   *\n   *    math.sec(2)      // returns number -2.4029979617223822\n   *    1 / math.cos(2)  // returns number -2.4029979617223822\n   *\n   * See also:\n   *\n   *    cos, csc, cot\n   *\n   * @param {number | BigNumber | Complex | Unit} x  Function input\n   * @return {number | BigNumber | Complex} Secant of x\n   */\n  return typed(name, {\n    number: _index.secNumber,\n    Complex: function Complex(x) {\n      return x.sec();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.cos());\n    }\n  }, trigUnit);\n});\nexports.createSec = createSec;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAIC,MAAM,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AACnD,IAAIE,SAAS,GAAGF,OAAO,CAAC,eAAe,CAAC;AACxC,IAAIG,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;AACzC,IAAIN,SAAS,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACM,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACvF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACpBC,UAAU,GAAGF,IAAI,CAACG,SAAS;EAC7B,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAER,SAAS,CAACS,cAAc,EAAE;IAC3CJ,KAAK,EAAEA;EACT,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjBS,MAAM,EAAEX,MAAM,CAACY,SAAS;IACxBC,OAAO,EAAE,SAASA,OAAO,CAACC,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACC,GAAG,EAAE;IAChB,CAAC;IACDP,SAAS,EAAE,SAASA,SAAS,CAACM,CAAC,EAAE;MAC/B,OAAO,IAAIP,UAAU,CAAC,CAAC,CAAC,CAACS,GAAG,CAACF,CAAC,CAACG,GAAG,EAAE,CAAC;IACvC;EACF,CAAC,EAAER,QAAQ,CAAC;AACd,CAAC,CAAC;AACFd,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}